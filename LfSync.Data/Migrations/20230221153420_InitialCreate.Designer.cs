// <auto-generated />
using System;
using System.Collections.Generic;
using LfSync.Data.Db;
using LfSync.Data.LCModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LfSync.Data.Migrations
{
    [DbContext(typeof(LibLCMDbContext))]
    [Migration("20230221153420_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LfCmLocationLfCmPerson", b =>
                {
                    b.Property<Guid>("LfCmPersonGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlacesOfResidenceRCGuid")
                        .HasColumnType("uuid");

                    b.HasKey("LfCmPersonGuid", "PlacesOfResidenceRCGuid");

                    b.HasIndex("PlacesOfResidenceRCGuid");

                    b.ToTable("LfCmPerson_PlacesOfResidenceRC", (string)null);
                });

            modelBuilder.Entity("LfCmPersonLfCmPossibility", b =>
                {
                    b.Property<Guid>("LfCmPossibility1Guid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ResearchersRCGuid")
                        .HasColumnType("uuid");

                    b.HasKey("LfCmPossibility1Guid", "ResearchersRCGuid");

                    b.HasIndex("ResearchersRCGuid");

                    b.ToTable("LfCmPossibility_ResearchersRC", (string)null);
                });

            modelBuilder.Entity("LfCmPersonLfCmPossibility1", b =>
                {
                    b.Property<Guid>("LfCmPerson1Guid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PositionsRCGuid")
                        .HasColumnType("uuid");

                    b.HasKey("LfCmPerson1Guid", "PositionsRCGuid");

                    b.HasIndex("PositionsRCGuid");

                    b.ToTable("LfCmPerson_PositionsRC", (string)null);
                });

            modelBuilder.Entity("LfCmPossibilityLfCmPossibility", b =>
                {
                    b.Property<Guid>("LfCmPossibilityGuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RestrictionsRCGuid")
                        .HasColumnType("uuid");

                    b.HasKey("LfCmPossibilityGuid", "RestrictionsRCGuid");

                    b.HasIndex("RestrictionsRCGuid");

                    b.ToTable("LfCmPossibility_RestrictionsRC", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmPossibility", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("BackColor")
                        .HasColumnType("integer");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ConfidenceRAGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<List<LfWsTsString>>("Description")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ForeColor")
                        .HasColumnType("integer");

                    b.Property<string>("HelpId")
                        .HasColumnType("text");

                    b.Property<bool>("Hidden")
                        .HasColumnType("boolean");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer");

                    b.Property<bool>("IsProtected")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LfLexExampleSentenceGuid")
                        .HasColumnType("uuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentPossibilityGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("SortSpec")
                        .HasColumnType("integer");

                    b.Property<Guid?>("StatusRAGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("UnderColor")
                        .HasColumnType("integer");

                    b.Property<int>("UnderStyle")
                        .HasColumnType("integer");

                    b.HasKey("Guid");

                    b.HasIndex("ConfidenceRAGuid");

                    b.HasIndex("LfLexExampleSentenceGuid");

                    b.HasIndex("ParentPossibilityGuid");

                    b.HasIndex("StatusRAGuid");

                    b.ToTable("Possibilities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("LfCmPossibility");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmTranslation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer");

                    b.Property<Guid?>("LfLexExampleSentenceGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer");

                    b.Property<List<LfWsTsString>>("Status")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<List<LfWsTsString>>("Translation")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("TypeRAGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.HasIndex("LfLexExampleSentenceGuid");

                    b.HasIndex("TypeRAGuid");

                    b.ToTable("LfCmTranslation");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExampleSentence", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer");

                    b.Property<List<LfWsTsString>>("Example")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer");

                    b.Property<LfTsString>("Reference")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.HasKey("Guid");

                    b.ToTable("ExampleSentences");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfTsString", b =>
                {
                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.ToTable("LfTsString");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmLocation", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfCmPossibility");

                    b.Property<List<LfWsTsString>>("Alias")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.ToTable("Possibilities", t =>
                        {
                            t.Property("Alias")
                                .HasColumnName("LfCmLocation_Alias");
                        });

                    b.HasDiscriminator().HasValue("LfCmLocation");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmPerson", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfCmPossibility");

                    b.Property<List<LfWsTsString>>("Alias")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<Guid>("EducationRAGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<bool>("IsResearcher")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlaceOfBirthRAGuid")
                        .HasColumnType("uuid");

                    b.HasIndex("EducationRAGuid");

                    b.HasIndex("PlaceOfBirthRAGuid");

                    b.HasDiscriminator().HasValue("LfCmPerson");
                });

            modelBuilder.Entity("LfCmLocationLfCmPerson", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfCmPerson", null)
                        .WithMany()
                        .HasForeignKey("LfCmPersonGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LfSync.Data.LCModel.LfCmLocation", null)
                        .WithMany()
                        .HasForeignKey("PlacesOfResidenceRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LfCmPersonLfCmPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", null)
                        .WithMany()
                        .HasForeignKey("LfCmPossibility1Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LfSync.Data.LCModel.LfCmPerson", null)
                        .WithMany()
                        .HasForeignKey("ResearchersRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LfCmPersonLfCmPossibility1", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfCmPerson", null)
                        .WithMany()
                        .HasForeignKey("LfCmPerson1Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", null)
                        .WithMany()
                        .HasForeignKey("PositionsRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LfCmPossibilityLfCmPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", null)
                        .WithMany()
                        .HasForeignKey("LfCmPossibilityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", null)
                        .WithMany()
                        .HasForeignKey("RestrictionsRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", "ConfidenceRA")
                        .WithMany()
                        .HasForeignKey("ConfidenceRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexExampleSentence", null)
                        .WithMany("DoNotPublishInRC")
                        .HasForeignKey("LfLexExampleSentenceGuid");

                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", null)
                        .WithMany("SubPossibilitiesOS")
                        .HasForeignKey("ParentPossibilityGuid");

                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", "StatusRA")
                        .WithMany()
                        .HasForeignKey("StatusRAGuid");

                    b.Navigation("ConfidenceRA");

                    b.Navigation("StatusRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmTranslation", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexExampleSentence", null)
                        .WithMany("TranslationsOC")
                        .HasForeignKey("LfLexExampleSentenceGuid");

                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", "TypeRA")
                        .WithMany()
                        .HasForeignKey("TypeRAGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmPerson", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfCmPossibility", "EducationRA")
                        .WithMany()
                        .HasForeignKey("EducationRAGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LfSync.Data.LCModel.LfCmLocation", "PlaceOfBirthRA")
                        .WithMany()
                        .HasForeignKey("PlaceOfBirthRAGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationRA");

                    b.Navigation("PlaceOfBirthRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfCmPossibility", b =>
                {
                    b.Navigation("SubPossibilitiesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExampleSentence", b =>
                {
                    b.Navigation("DoNotPublishInRC");

                    b.Navigation("TranslationsOC");
                });
#pragma warning restore 612, 618
        }
    }
}
