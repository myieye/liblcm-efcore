// <auto-generated />
using System;
using System.Collections.Generic;
using LfSync.Data.Db;
using LfSync.Data.LCModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LfSync.Data.Migrations
{
    [DbContext(typeof(LibLCMDbContext))]
    [Migration("20230227142109_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LfFsFeatStrucLfFsFeatStrucDisj", b =>
                {
                    b.Property<Guid>("ContentsOCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ContentsOCGuid");

                    b.Property<Guid>("FeatureDisjunctionsOCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FeatureDisjunctionsOCGuid");

                    b.HasKey("ContentsOCGuid", "FeatureDisjunctionsOCGuid")
                        .HasName("PK_FsFeatStrucFsFeatStrucDisj");

                    b.HasIndex("FeatureDisjunctionsOCGuid")
                        .HasDatabaseName("IX_FsFeatStrucFsFeatStrucDisj_FeatureDisjunctionsOCGuid");

                    b.ToTable("FsFeatStrucFsFeatStrucDisj", (string)null);
                });

            modelBuilder.Entity("LfLexExampleSentenceLfPossibility", b =>
                {
                    b.Property<Guid>("DoNotPublishInRCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DoNotPublishInRCGuid");

                    b.Property<Guid>("LfLexExampleSentenceGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexExampleSentenceGuid");

                    b.HasKey("DoNotPublishInRCGuid", "LfLexExampleSentenceGuid")
                        .HasName("PK_LexExampleSentence_DoNotPublishInRC");

                    b.HasIndex("LfLexExampleSentenceGuid")
                        .HasDatabaseName("IX_LexExampleSentence_DoNotPublishInRC_LexExampleSentenceGuid");

                    b.ToTable("LfLexExampleSentence_DoNotPublishInRC", (string)null);
                });

            modelBuilder.Entity("LfLocationLfPerson", b =>
                {
                    b.Property<Guid>("LfPersonGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PersonGuid");

                    b.Property<Guid>("PlacesOfResidenceRCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PlacesOfResidenceRCGuid");

                    b.HasKey("LfPersonGuid", "PlacesOfResidenceRCGuid")
                        .HasName("PK_LocationPerson");

                    b.HasIndex("PlacesOfResidenceRCGuid")
                        .HasDatabaseName("IX_LocationPerson_PlacesOfResidenceRCGuid");

                    b.ToTable("LocationPerson", (string)null);
                });

            modelBuilder.Entity("LfPersonLfPossibility", b =>
                {
                    b.Property<Guid>("LfPossibility1Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("Possibility1Guid");

                    b.Property<Guid>("ResearchersRCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ResearchersRCGuid");

                    b.HasKey("LfPossibility1Guid", "ResearchersRCGuid")
                        .HasName("PK_Possibility_ResearchersRC");

                    b.HasIndex("ResearchersRCGuid")
                        .HasDatabaseName("IX_Possibility_ResearchersRC_ResearchersRCGuid");

                    b.ToTable("LfPossibility_ResearchersRC", (string)null);
                });

            modelBuilder.Entity("LfPersonLfPossibility1", b =>
                {
                    b.Property<Guid>("LfPerson1Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("Person1Guid");

                    b.Property<Guid>("PositionsRCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PositionsRCGuid");

                    b.HasKey("LfPerson1Guid", "PositionsRCGuid")
                        .HasName("PK_Person_PositionsRC");

                    b.HasIndex("PositionsRCGuid")
                        .HasDatabaseName("IX_Person_PositionsRC_PositionsRCGuid");

                    b.ToTable("LfPerson_PositionsRC", (string)null);
                });

            modelBuilder.Entity("LfPossibilityLfPossibility", b =>
                {
                    b.Property<Guid>("LfPossibilityGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PossibilityGuid");

                    b.Property<Guid>("RestrictionsRCGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("RestrictionsRCGuid");

                    b.HasKey("LfPossibilityGuid", "RestrictionsRCGuid")
                        .HasName("PK_Possibility_RestrictionsRC");

                    b.HasIndex("RestrictionsRCGuid")
                        .HasDatabaseName("IX_Possibility_RestrictionsRC_RestrictionsRCGuid");

                    b.ToTable("LfPossibility_RestrictionsRC", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfAgentEvaluation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfWfiAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiAnalysisGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_AgentEvaluation");

                    b.HasIndex("LfWfiAnalysisGuid")
                        .HasDatabaseName("IX_AgentEvaluation_WfiAnalysisGuid");

                    b.ToTable("AgentEvaluation", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfAnalysis", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<Guid>("AnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AnalysisGuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<bool>("HasWordform")
                        .HasColumnType("boolean")
                        .HasColumnName("HasWordform");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfSegmentGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SegmentGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid>("WordformGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WordformGuid");

                    b.HasKey("Guid")
                        .HasName("PK_Analysis");

                    b.HasIndex("AnalysisGuid")
                        .HasDatabaseName("IX_Analysis_AnalysisGuid");

                    b.HasIndex("LfSegmentGuid")
                        .HasDatabaseName("IX_Analysis_SegmentGuid");

                    b.HasIndex("WordformGuid")
                        .HasDatabaseName("IX_Analysis_WordformGuid");

                    b.ToTable("Analysis", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfDomainQ", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("ExampleSentences")
                        .HasColumnType("jsonb")
                        .HasColumnName("ExampleSentences");

                    b.Property<List<LfWsTsString>>("ExampleWords")
                        .HasColumnType("jsonb")
                        .HasColumnName("ExampleWords");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfSemanticDomainGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SemanticDomainGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("Question")
                        .HasColumnType("jsonb")
                        .HasColumnName("Question");

                    b.HasKey("Guid")
                        .HasName("PK_DomainQ");

                    b.HasIndex("LfSemanticDomainGuid")
                        .HasDatabaseName("IX_DomainQ_SemanticDomainGuid");

                    b.ToTable("DomainQ", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFile", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Copyright")
                        .HasColumnType("jsonb")
                        .HasColumnName("Copyright");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<string>("InternalPath")
                        .HasColumnType("text")
                        .HasColumnName("InternalPath");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<string>("OriginalPath")
                        .HasColumnType("text")
                        .HasColumnName("OriginalPath");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_File");

                    b.ToTable("File", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatDefn", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<string>("CatalogSourceId")
                        .HasColumnType("text")
                        .HasColumnName("CatalogSourceId");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("DefaultOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultOAGuid");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<bool>("DisplayToRightOfValues")
                        .HasColumnType("boolean")
                        .HasColumnName("DisplayToRightOfValues");

                    b.Property<List<LfWsTsString>>("GlossAbbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("GlossAbbreviation");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfFsFeatStrucTypeGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FsFeatStrucTypeGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid1");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("RightGlossSep")
                        .HasColumnType("jsonb")
                        .HasColumnName("RightGlossSep");

                    b.Property<bool>("ShowInGloss")
                        .HasColumnType("boolean")
                        .HasColumnName("ShowInGloss");

                    b.HasKey("Guid")
                        .HasName("PK_FsFeatDefn");

                    b.HasIndex("DefaultOAGuid")
                        .HasDatabaseName("IX_FsFeatDefn_DefaultOAGuid");

                    b.HasIndex("LfFsFeatStrucTypeGuid")
                        .HasDatabaseName("IX_FsFeatDefn_FsFeatStrucTypeGuid");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_FsFeatDefn_PartOfSpeechGuid");

                    b.HasIndex("LfPartOfSpeechGuid1")
                        .HasDatabaseName("IX_FsFeatDefn_PartOfSpeechGuid1");

                    b.ToTable("FsFeatDefn", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatStruc", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoInflClassGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflClassGuid");

                    b.Property<Guid?>("LfMoStemNameGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStemNameGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid1");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("TypeRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("TypeRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_FsFeatStruc");

                    b.HasIndex("LfMoInflClassGuid")
                        .HasDatabaseName("IX_FsFeatStruc_MoInflClassGuid");

                    b.HasIndex("LfMoStemNameGuid")
                        .HasDatabaseName("IX_FsFeatStruc_MoStemNameGuid");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_FsFeatStruc_PartOfSpeechGuid");

                    b.HasIndex("LfPartOfSpeechGuid1")
                        .HasDatabaseName("IX_FsFeatStruc_PartOfSpeechGuid1");

                    b.HasIndex("TypeRAGuid")
                        .HasDatabaseName("IX_FsFeatStruc_TypeRAGuid");

                    b.ToTable("FsFeatStruc", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatStrucDisj", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_FsFeatStrucDisj");

                    b.ToTable("FsFeatStrucDisj", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatStrucType", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<string>("CatalogSourceId")
                        .HasColumnType("text")
                        .HasColumnName("CatalogSourceId");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_FsFeatStrucType");

                    b.ToTable("FsFeatStrucType", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatureSpecification", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid>("FeatureRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FeatureRAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfFsFeatStrucGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FsFeatStrucGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<int>("RefNumber")
                        .HasColumnType("integer")
                        .HasColumnName("RefNumber");

                    b.Property<int>("ValueState")
                        .HasColumnType("integer")
                        .HasColumnName("ValueState");

                    b.HasKey("Guid")
                        .HasName("PK_FsFeatureSpecification");

                    b.HasIndex("FeatureRAGuid")
                        .HasDatabaseName("IX_FsFeatureSpecification_FeatureRAGuid");

                    b.HasIndex("LfFsFeatStrucGuid")
                        .HasDatabaseName("IX_FsFeatureSpecification_FsFeatStrucGuid");

                    b.ToTable("FsFeatureSpecification", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexAppendix", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("ContentsOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ContentsOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_LexAppendix");

                    b.HasIndex("ContentsOAGuid")
                        .HasDatabaseName("IX_LexAppendix_ContentsOAGuid");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_LexAppendix_LexSenseGuid");

                    b.ToTable("LexAppendix", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntry", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Bibliography")
                        .HasColumnType("jsonb")
                        .HasColumnName("Bibliography");

                    b.Property<List<LfWsTsString>>("CitationForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("CitationForm");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Comment")
                        .HasColumnType("jsonb")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateModified");

                    b.Property<bool>("DoNotUseForParsing")
                        .HasColumnType("boolean")
                        .HasColumnName("DoNotUseForParsing");

                    b.Property<int>("HomographNumber")
                        .HasColumnType("integer")
                        .HasColumnName("HomographNumber");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<LfTsString>("ImportResidue")
                        .HasColumnType("jsonb")
                        .HasColumnName("ImportResidue");

                    b.Property<Guid?>("LexemeFormOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexemeFormOAGuid");

                    b.Property<Guid?>("LfWfiAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiAnalysisGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<List<LfWsTsString>>("LiteralMeaning")
                        .HasColumnType("jsonb")
                        .HasColumnName("LiteralMeaning");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("Restrictions")
                        .HasColumnType("jsonb")
                        .HasColumnName("Restrictions");

                    b.Property<List<LfWsTsString>>("SummaryDefinition")
                        .HasColumnType("jsonb")
                        .HasColumnName("SummaryDefinition");

                    b.HasKey("Guid")
                        .HasName("PK_Entries");

                    b.HasIndex("LexemeFormOAGuid")
                        .HasDatabaseName("IX_Entries_LexemeFormOAGuid");

                    b.HasIndex("LfWfiAnalysisGuid")
                        .HasDatabaseName("IX_Entries_WfiAnalysisGuid");

                    b.ToTable("Entries", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryRef", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("HideMinorEntry")
                        .HasColumnType("integer")
                        .HasColumnName("HideMinorEntry");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<int>("RefType")
                        .HasColumnType("integer")
                        .HasColumnName("RefType");

                    b.Property<List<LfWsTsString>>("Summary")
                        .HasColumnType("jsonb")
                        .HasColumnName("Summary");

                    b.HasKey("Guid")
                        .HasName("PK_LexEntryRef");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_LexEntryRef_LexEntryGuid");

                    b.ToTable("LexEntryRef", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEtymology", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Bibliography")
                        .HasColumnType("jsonb")
                        .HasColumnName("Bibliography");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Comment")
                        .HasColumnType("jsonb")
                        .HasColumnName("Comment");

                    b.Property<List<LfWsTsString>>("Form")
                        .HasColumnType("jsonb")
                        .HasColumnName("Form");

                    b.Property<List<LfWsTsString>>("Gloss")
                        .HasColumnType("jsonb")
                        .HasColumnName("Gloss");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("LanguageNotes")
                        .HasColumnType("jsonb")
                        .HasColumnName("LanguageNotes");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<List<LfWsTsString>>("Note")
                        .HasColumnType("jsonb")
                        .HasColumnName("Note");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("PrecComment")
                        .HasColumnType("jsonb")
                        .HasColumnName("PrecComment");

                    b.HasKey("Guid")
                        .HasName("PK_LexEtymology");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_LexEtymology_LexEntryGuid");

                    b.ToTable("LexEtymology", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExampleSentence", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Example")
                        .HasColumnType("jsonb")
                        .HasColumnName("Example");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexExtendedNoteGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexExtendedNoteGuid");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<LfTsString>("Reference")
                        .HasColumnType("jsonb")
                        .HasColumnName("Reference");

                    b.HasKey("Guid")
                        .HasName("PK_ExampleSentences");

                    b.HasIndex("LfLexExtendedNoteGuid")
                        .HasDatabaseName("IX_ExampleSentences_LexExtendedNoteGuid");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_ExampleSentences_LexSenseGuid");

                    b.ToTable("ExampleSentences", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExtendedNote", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Discussion")
                        .HasColumnType("jsonb")
                        .HasColumnName("Discussion");

                    b.Property<Guid?>("ExtendedNoteTypeRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ExtendedNoteTypeRAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_LexExtendedNote");

                    b.HasIndex("ExtendedNoteTypeRAGuid")
                        .HasDatabaseName("IX_LexExtendedNote_ExtendedNoteTypeRAGuid");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_LexExtendedNote_LexSenseGuid");

                    b.ToTable("LexExtendedNote", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexPronunciation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<LfTsString>("CVPattern")
                        .HasColumnType("jsonb")
                        .HasColumnName("CVPattern");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Form")
                        .HasColumnType("jsonb")
                        .HasColumnName("Form");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<Guid?>("LocationRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LocationRAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<LfTsString>("Tone")
                        .HasColumnType("jsonb")
                        .HasColumnName("Tone");

                    b.HasKey("Guid")
                        .HasName("PK_LexPronunciation");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_LexPronunciation_LexEntryGuid");

                    b.HasIndex("LocationRAGuid")
                        .HasDatabaseName("IX_LexPronunciation_LocationRAGuid");

                    b.ToTable("LexPronunciation", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexReference", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Comment")
                        .HasColumnType("jsonb")
                        .HasColumnName("Comment");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexRefTypeGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexRefTypeGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_LexReference");

                    b.HasIndex("LfLexRefTypeGuid")
                        .HasDatabaseName("IX_LexReference_LexRefTypeGuid");

                    b.ToTable("LexReference", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexSense", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("AnthroNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("AnthroNote");

                    b.Property<List<LfWsTsString>>("Bibliography")
                        .HasColumnType("jsonb")
                        .HasColumnName("Bibliography");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Definition")
                        .HasColumnType("jsonb")
                        .HasColumnName("Definition");

                    b.Property<List<LfWsTsString>>("DiscourseNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("DiscourseNote");

                    b.Property<List<LfWsTsString>>("EncyclopedicInfo")
                        .HasColumnType("jsonb")
                        .HasColumnName("EncyclopedicInfo");

                    b.Property<List<LfWsTsString>>("Exemplar")
                        .HasColumnType("jsonb")
                        .HasColumnName("Exemplar");

                    b.Property<List<LfWsTsString>>("GeneralNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("GeneralNote");

                    b.Property<List<LfWsTsString>>("Gloss")
                        .HasColumnType("jsonb")
                        .HasColumnName("Gloss");

                    b.Property<List<LfWsTsString>>("GrammarNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("GrammarNote");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<LfTsString>("ImportResidue")
                        .HasColumnType("jsonb")
                        .HasColumnName("ImportResidue");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<Guid?>("MorphoSyntaxAnalysisRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MorphoSyntaxAnalysisRAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("PhonologyNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("PhonologyNote");

                    b.Property<List<LfWsTsString>>("Restrictions")
                        .HasColumnType("jsonb")
                        .HasColumnName("Restrictions");

                    b.Property<LfTsString>("ScientificName")
                        .HasColumnType("jsonb")
                        .HasColumnName("ScientificName");

                    b.Property<List<LfWsTsString>>("SemanticsNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("SemanticsNote");

                    b.Property<Guid?>("SenseTypeRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SenseTypeRAGuid");

                    b.Property<List<LfWsTsString>>("SocioLinguisticsNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("SocioLinguisticsNote");

                    b.Property<LfTsString>("Source")
                        .HasColumnType("jsonb")
                        .HasColumnName("Source");

                    b.Property<Guid?>("StatusRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StatusRAGuid");

                    b.Property<List<LfWsTsString>>("UsageNote")
                        .HasColumnType("jsonb")
                        .HasColumnName("UsageNote");

                    b.HasKey("Guid")
                        .HasName("PK_Senses");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_Senses_LexEntryGuid");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_Senses_LexSenseGuid");

                    b.HasIndex("MorphoSyntaxAnalysisRAGuid")
                        .HasDatabaseName("IX_Senses_MorphoSyntaxAnalysisRAGuid");

                    b.HasIndex("SenseTypeRAGuid")
                        .HasDatabaseName("IX_Senses_SenseTypeRAGuid");

                    b.HasIndex("StatusRAGuid")
                        .HasDatabaseName("IX_Senses_StatusRAGuid");

                    b.ToTable("Senses", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMedia", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("Label")
                        .HasColumnType("jsonb")
                        .HasColumnName("Label");

                    b.Property<Guid?>("LfLexPronunciationGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexPronunciationGuid");

                    b.Property<Guid?>("MediaFileRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MediaFileRAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_Media");

                    b.HasIndex("LfLexPronunciationGuid")
                        .HasDatabaseName("IX_Media_LexPronunciationGuid");

                    b.HasIndex("MediaFileRAGuid")
                        .HasDatabaseName("IX_Media_MediaFileRAGuid");

                    b.ToTable("Media", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMediaURI", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<string>("MediaURI")
                        .HasColumnType("text")
                        .HasColumnName("MediaURI");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MediaURI");

                    b.ToTable("MediaURI", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoCompoundRule", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Disabled");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfWfiAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiAnalysisGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("StratumRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StratumRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoCompoundRule");

                    b.HasIndex("LfWfiAnalysisGuid")
                        .HasDatabaseName("IX_MoCompoundRule_WfiAnalysisGuid");

                    b.HasIndex("StratumRAGuid")
                        .HasDatabaseName("IX_MoCompoundRule_StratumRAGuid");

                    b.ToTable("MoCompoundRule", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoCompoundRuleApp", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LeftFormRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LeftFormRAGuid");

                    b.Property<Guid?>("LfMoStratumAppGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStratumAppGuid");

                    b.Property<Guid?>("LinkerRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LinkerRAGuid");

                    b.Property<List<LfWsTsString>>("OutputForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutputForm");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("RightFormRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("RightFormRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoCompoundRuleApp");

                    b.HasIndex("LeftFormRAGuid")
                        .HasDatabaseName("IX_MoCompoundRuleApp_LeftFormRAGuid");

                    b.HasIndex("LfMoStratumAppGuid")
                        .HasDatabaseName("IX_MoCompoundRuleApp_MoStratumAppGuid");

                    b.HasIndex("LinkerRAGuid")
                        .HasDatabaseName("IX_MoCompoundRuleApp_LinkerRAGuid");

                    b.HasIndex("RightFormRAGuid")
                        .HasDatabaseName("IX_MoCompoundRuleApp_RightFormRAGuid");

                    b.ToTable("MoCompoundRuleApp", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDeriv", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("InflectionalFeatsOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflectionalFeatsOAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("StemFormRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StemFormRAGuid");

                    b.Property<Guid?>("StemMsaRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StemMsaRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoDeriv");

                    b.HasIndex("InflectionalFeatsOAGuid")
                        .HasDatabaseName("IX_MoDeriv_InflectionalFeatsOAGuid");

                    b.HasIndex("StemFormRAGuid")
                        .HasDatabaseName("IX_MoDeriv_StemFormRAGuid");

                    b.HasIndex("StemMsaRAGuid")
                        .HasDatabaseName("IX_MoDeriv_StemMsaRAGuid");

                    b.ToTable("MoDeriv", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivAffApp", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<Guid?>("AffixFormRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AffixFormRAGuid");

                    b.Property<Guid?>("AffixMsaRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AffixMsaRAGuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoStratumAppGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStratumAppGuid");

                    b.Property<List<LfWsTsString>>("OutputForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutputForm");

                    b.Property<Guid?>("OutputMsaOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("OutputMsaOAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoDerivAffApp");

                    b.HasIndex("AffixFormRAGuid")
                        .HasDatabaseName("IX_MoDerivAffApp_AffixFormRAGuid");

                    b.HasIndex("AffixMsaRAGuid")
                        .HasDatabaseName("IX_MoDerivAffApp_AffixMsaRAGuid");

                    b.HasIndex("LfMoStratumAppGuid")
                        .HasDatabaseName("IX_MoDerivAffApp_MoStratumAppGuid");

                    b.HasIndex("OutputMsaOAGuid")
                        .HasDatabaseName("IX_MoDerivAffApp_OutputMsaOAGuid");

                    b.ToTable("MoDerivAffApp", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoForm", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Discriminator");

                    b.Property<List<LfWsTsString>>("Form")
                        .HasColumnType("jsonb")
                        .HasColumnName("Form");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<bool>("IsAbstract")
                        .HasColumnType("boolean")
                        .HasColumnName("IsAbstract");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<Guid?>("MorphTypeRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MorphTypeRAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoForm");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_MoForm_LexEntryGuid");

                    b.HasIndex("MorphTypeRAGuid")
                        .HasDatabaseName("IX_MoForm_MorphTypeRAGuid");

                    b.ToTable("MoForm", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("LfMoForm");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoGlossItem", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<string>("AfterSeparator")
                        .HasColumnType("text")
                        .HasColumnName("AfterSeparator");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<bool>("ComplexNameFirst")
                        .HasColumnType("boolean")
                        .HasColumnName("ComplexNameFirst");

                    b.Property<string>("ComplexNameSeparator")
                        .HasColumnType("text")
                        .HasColumnName("ComplexNameSeparator");

                    b.Property<string>("EticID")
                        .HasColumnType("text")
                        .HasColumnName("EticID");

                    b.Property<Guid?>("FeatStructFragOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FeatStructFragOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoMorphSynAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoMorphSynAnalysisGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("Status");

                    b.Property<Guid?>("TargetRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("TargetRAGuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("Type");

                    b.HasKey("Guid")
                        .HasName("PK_MoGlossItem");

                    b.HasIndex("FeatStructFragOAGuid")
                        .HasDatabaseName("IX_MoGlossItem_FeatStructFragOAGuid");

                    b.HasIndex("LfMoMorphSynAnalysisGuid")
                        .HasDatabaseName("IX_MoGlossItem_MoMorphSynAnalysisGuid");

                    b.HasIndex("TargetRAGuid")
                        .HasDatabaseName("IX_MoGlossItem_TargetRAGuid");

                    b.ToTable("MoGlossItem", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixSlot", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexEntryInflTypeGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryInflTypeGuid");

                    b.Property<Guid?>("LfMoInflAffMsaGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffMsaGuid");

                    b.Property<Guid?>("LfMoInflAffixTemplateGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffixTemplateGuid");

                    b.Property<Guid?>("LfMoInflAffixTemplateGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffixTemplateGuid1");

                    b.Property<Guid?>("LfMoInflAffixTemplateGuid2")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffixTemplateGuid2");

                    b.Property<Guid?>("LfMoInflAffixTemplateGuid3")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffixTemplateGuid3");

                    b.Property<Guid?>("LfMoInflAffixTemplateGuid4")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffixTemplateGuid4");

                    b.Property<Guid?>("LfMoStemMsaGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStemMsaGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<bool>("Optional")
                        .HasColumnType("boolean")
                        .HasColumnName("Optional");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoInflAffixSlot");

                    b.HasIndex("LfLexEntryInflTypeGuid")
                        .HasDatabaseName("IX_MoInflAffixSlot_LexEntryInflTypeGuid");

                    b.HasIndex("LfMoInflAffMsaGuid")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoInflAffMsaGuid");

                    b.HasIndex("LfMoInflAffixTemplateGuid")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoInflAffixTemplateGuid");

                    b.HasIndex("LfMoInflAffixTemplateGuid1")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoInflAffixTemplateGuid1");

                    b.HasIndex("LfMoInflAffixTemplateGuid2")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoInflAffixTemplateGuid2");

                    b.HasIndex("LfMoInflAffixTemplateGuid3")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoInflAffixTemplateGuid3");

                    b.HasIndex("LfMoInflAffixTemplateGuid4")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoInflAffixTemplateGuid4");

                    b.HasIndex("LfMoStemMsaGuid")
                        .HasDatabaseName("IX_MoInflAffixSlot_MoStemMsaGuid");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_MoInflAffixSlot_PartOfSpeechGuid");

                    b.ToTable("MoInflAffixSlot", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixSlotApp", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<Guid?>("AffixFormRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AffixFormRAGuid");

                    b.Property<Guid?>("AffixMsaRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AffixMsaRAGuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoInflTemplateAppGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflTemplateAppGuid");

                    b.Property<List<LfWsTsString>>("OutputForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutputForm");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("SlotRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SlotRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoInflAffixSlotApp");

                    b.HasIndex("AffixFormRAGuid")
                        .HasDatabaseName("IX_MoInflAffixSlotApp_AffixFormRAGuid");

                    b.HasIndex("AffixMsaRAGuid")
                        .HasDatabaseName("IX_MoInflAffixSlotApp_AffixMsaRAGuid");

                    b.HasIndex("LfMoInflTemplateAppGuid")
                        .HasDatabaseName("IX_MoInflAffixSlotApp_MoInflTemplateAppGuid");

                    b.HasIndex("SlotRAGuid")
                        .HasDatabaseName("IX_MoInflAffixSlotApp_SlotRAGuid");

                    b.ToTable("MoInflAffixSlotApp", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixTemplate", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean")
                        .HasColumnName("Disabled");

                    b.Property<bool>("Final")
                        .HasColumnType("boolean")
                        .HasColumnName("Final");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<Guid?>("LfWfiAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiAnalysisGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("RegionOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("RegionOAGuid");

                    b.Property<Guid?>("StratumRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StratumRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoInflAffixTemplate");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_MoInflAffixTemplate_PartOfSpeechGuid");

                    b.HasIndex("LfWfiAnalysisGuid")
                        .HasDatabaseName("IX_MoInflAffixTemplate_WfiAnalysisGuid");

                    b.HasIndex("RegionOAGuid")
                        .HasDatabaseName("IX_MoInflAffixTemplate_RegionOAGuid");

                    b.HasIndex("StratumRAGuid")
                        .HasDatabaseName("IX_MoInflAffixTemplate_StratumRAGuid");

                    b.ToTable("MoInflAffixTemplate", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflClass", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoAffixFormGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoAffixFormGuid");

                    b.Property<Guid?>("LfMoInflClassGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflClassGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoInflClass");

                    b.HasIndex("LfMoAffixFormGuid")
                        .HasDatabaseName("IX_MoInflClass_MoAffixFormGuid");

                    b.HasIndex("LfMoInflClassGuid")
                        .HasDatabaseName("IX_MoInflClass_MoInflClassGuid");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_MoInflClass_PartOfSpeechGuid");

                    b.ToTable("MoInflClass", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflTemplateApp", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("OutputForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutputForm");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("TemplateRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("TemplateRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoInflTemplateApp");

                    b.HasIndex("TemplateRAGuid")
                        .HasDatabaseName("IX_MoInflTemplateApp_TemplateRAGuid");

                    b.ToTable("MoInflTemplateApp", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoMorphSynAnalysis", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Discriminator");

                    b.Property<string>("GlossString")
                        .HasColumnType("text")
                        .HasColumnName("GlossString");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<Guid?>("LfMoMorphSynAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoMorphSynAnalysisGuid");

                    b.Property<string>("LiftResidue")
                        .HasColumnType("text")
                        .HasColumnName("LiftResidue");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoMorphSynAnalysis");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_LexEntryGuid");

                    b.HasIndex("LfMoMorphSynAnalysisGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_MoMorphSynAnalysisGuid");

                    b.ToTable("MoMorphSynAnalysis", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("LfMoMorphSynAnalysis");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoPhonolRuleApp", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoStratumAppGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStratumAppGuid");

                    b.Property<List<LfWsTsString>>("OutputForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutputForm");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<bool>("VacuousApp")
                        .HasColumnType("boolean")
                        .HasColumnName("VacuousApp");

                    b.HasKey("Guid")
                        .HasName("PK_MoPhonolRuleApp");

                    b.HasIndex("LfMoStratumAppGuid")
                        .HasDatabaseName("IX_MoPhonolRuleApp_MoStratumAppGuid");

                    b.ToTable("MoPhonolRuleApp", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoReferralRule", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("InputOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InputOAGuid");

                    b.Property<Guid?>("LfMoInflClassGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflClassGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<Guid?>("OutputOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("OutputOAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoReferralRule");

                    b.HasIndex("InputOAGuid")
                        .HasDatabaseName("IX_MoReferralRule_InputOAGuid");

                    b.HasIndex("LfMoInflClassGuid")
                        .HasDatabaseName("IX_MoReferralRule_MoInflClassGuid");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_MoReferralRule_PartOfSpeechGuid");

                    b.HasIndex("OutputOAGuid")
                        .HasDatabaseName("IX_MoReferralRule_OutputOAGuid");

                    b.ToTable("MoReferralRule", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemName", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("DefaultAffixRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultAffixRAGuid");

                    b.Property<Guid?>("DefaultStemRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultStemRAGuid");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoInflClassGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflClassGuid");

                    b.Property<Guid?>("LfPartOfSpeechGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_MoStemName");

                    b.HasIndex("DefaultAffixRAGuid")
                        .HasDatabaseName("IX_MoStemName_DefaultAffixRAGuid");

                    b.HasIndex("DefaultStemRAGuid")
                        .HasDatabaseName("IX_MoStemName_DefaultStemRAGuid");

                    b.HasIndex("LfMoInflClassGuid")
                        .HasDatabaseName("IX_MoStemName_MoInflClassGuid");

                    b.HasIndex("LfPartOfSpeechGuid")
                        .HasDatabaseName("IX_MoStemName_PartOfSpeechGuid");

                    b.ToTable("MoStemName", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStratum", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("PhonemesRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PhonemesRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoStratum");

                    b.HasIndex("PhonemesRAGuid")
                        .HasDatabaseName("IX_MoStratum_PhonemesRAGuid");

                    b.ToTable("MoStratum", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStratumApp", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfMoDerivGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoDerivGuid");

                    b.Property<List<LfWsTsString>>("OutputForm")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutputForm");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("StratumRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StratumRAGuid");

                    b.Property<Guid?>("TemplateAppOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("TemplateAppOAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_MoStratumApp");

                    b.HasIndex("LfMoDerivGuid")
                        .HasDatabaseName("IX_MoStratumApp_MoDerivGuid");

                    b.HasIndex("StratumRAGuid")
                        .HasDatabaseName("IX_MoStratumApp_StratumRAGuid");

                    b.HasIndex("TemplateAppOAGuid")
                        .HasDatabaseName("IX_MoStratumApp_TemplateAppOAGuid");

                    b.ToTable("MoStratumApp", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfNote", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Content")
                        .HasColumnType("jsonb")
                        .HasColumnName("Content");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfSegmentGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SegmentGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_Note");

                    b.HasIndex("LfSegmentGuid")
                        .HasDatabaseName("IX_Note_SegmentGuid");

                    b.ToTable("Note", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhBdryMarker", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfPhPhonemeSetGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PhPhonemeSetGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_PhBdryMarker");

                    b.HasIndex("LfPhPhonemeSetGuid")
                        .HasDatabaseName("IX_PhBdryMarker_PhPhonemeSetGuid");

                    b.ToTable("PhBdryMarker", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhCode", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfPhBdryMarkerGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PhBdryMarkerGuid");

                    b.Property<Guid?>("LfPhPhonemeGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PhPhonemeGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("Representation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Representation");

                    b.HasKey("Guid")
                        .HasName("PK_PhCode");

                    b.HasIndex("LfPhBdryMarkerGuid")
                        .HasDatabaseName("IX_PhCode_PhBdryMarkerGuid");

                    b.HasIndex("LfPhPhonemeGuid")
                        .HasDatabaseName("IX_PhCode_PhPhonemeGuid");

                    b.ToTable("PhCode", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhEnvironment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<string>("AMPLEStringSegment")
                        .HasColumnType("text")
                        .HasColumnName("AMPLEStringSegment");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LeftContextRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LeftContextRAGuid");

                    b.Property<Guid?>("LfMoAffixAllomorphGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoAffixAllomorphGuid");

                    b.Property<Guid?>("LfMoAffixAllomorphGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("MoAffixAllomorphGuid1");

                    b.Property<Guid?>("LfMoStemAllomorphGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStemAllomorphGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("RightContextRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("RightContextRAGuid");

                    b.Property<LfTsString>("StringRepresentation")
                        .HasColumnType("jsonb")
                        .HasColumnName("StringRepresentation");

                    b.HasKey("Guid")
                        .HasName("PK_PhEnvironment");

                    b.HasIndex("LeftContextRAGuid")
                        .HasDatabaseName("IX_PhEnvironment_LeftContextRAGuid");

                    b.HasIndex("LfMoAffixAllomorphGuid")
                        .HasDatabaseName("IX_PhEnvironment_MoAffixAllomorphGuid");

                    b.HasIndex("LfMoAffixAllomorphGuid1")
                        .HasDatabaseName("IX_PhEnvironment_MoAffixAllomorphGuid1");

                    b.HasIndex("LfMoStemAllomorphGuid")
                        .HasDatabaseName("IX_PhEnvironment_MoStemAllomorphGuid");

                    b.HasIndex("RightContextRAGuid")
                        .HasDatabaseName("IX_PhEnvironment_RightContextRAGuid");

                    b.ToTable("PhEnvironment", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhonContext", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("DescriptionOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DescriptionOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_PhPhonContext");

                    b.HasIndex("DescriptionOAGuid")
                        .HasDatabaseName("IX_PhPhonContext_DescriptionOAGuid");

                    b.ToTable("PhPhonContext", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhoneme", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<LfTsString>("BasicIPASymbol")
                        .HasColumnType("jsonb")
                        .HasColumnName("BasicIPASymbol");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<Guid?>("FeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FeaturesOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfPhPhonemeSetGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PhPhonemeSetGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_PhPhoneme");

                    b.HasIndex("FeaturesOAGuid")
                        .HasDatabaseName("IX_PhPhoneme_FeaturesOAGuid");

                    b.HasIndex("LfPhPhonemeSetGuid")
                        .HasDatabaseName("IX_PhPhoneme_PhPhonemeSetGuid");

                    b.ToTable("PhPhoneme", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhonemeSet", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_PhPhonemeSet");

                    b.ToTable("PhPhonemeSet", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPicture", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Caption")
                        .HasColumnType("jsonb")
                        .HasColumnName("Caption");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<int>("LayoutPos")
                        .HasColumnType("integer")
                        .HasColumnName("LayoutPos");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<int>("LocationMax")
                        .HasColumnType("integer")
                        .HasColumnName("LocationMax");

                    b.Property<int>("LocationMin")
                        .HasColumnType("integer")
                        .HasColumnName("LocationMin");

                    b.Property<int>("LocationRangeType")
                        .HasColumnType("integer")
                        .HasColumnName("LocationRangeType");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("PictureFileRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PictureFileRAGuid");

                    b.Property<int>("ScaleFactor")
                        .HasColumnType("integer")
                        .HasColumnName("ScaleFactor");

                    b.HasKey("Guid")
                        .HasName("PK_Picture");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_Picture_LexSenseGuid");

                    b.HasIndex("PictureFileRAGuid")
                        .HasDatabaseName("IX_Picture_PictureFileRAGuid");

                    b.ToTable("Picture", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPossibility", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<int>("BackColor")
                        .HasColumnType("integer")
                        .HasColumnName("BackColor");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("ConfidenceRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ConfidenceRAGuid");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateModified");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Discriminator");

                    b.Property<int>("ForeColor")
                        .HasColumnType("integer")
                        .HasColumnName("ForeColor");

                    b.Property<string>("HelpId")
                        .HasColumnType("text")
                        .HasColumnName("HelpId");

                    b.Property<bool>("Hidden")
                        .HasColumnType("boolean")
                        .HasColumnName("Hidden");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<bool>("IsProtected")
                        .HasColumnType("boolean")
                        .HasColumnName("IsProtected");

                    b.Property<Guid?>("LfLexEntryGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid");

                    b.Property<Guid?>("LfLexEntryGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid1");

                    b.Property<Guid?>("LfLexEntryGuid2")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryGuid2");

                    b.Property<Guid?>("LfLexEtymologyGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEtymologyGuid");

                    b.Property<Guid?>("LfLexPronunciationGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexPronunciationGuid");

                    b.Property<Guid?>("LfLexSenseGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid1");

                    b.Property<Guid?>("LfLexSenseGuid2")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid2");

                    b.Property<Guid?>("LfLexSenseGuid3")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid3");

                    b.Property<Guid?>("LfLexSenseGuid4")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid4");

                    b.Property<Guid?>("LfLexSenseGuid5")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid5");

                    b.Property<Guid?>("LfMoCompoundRuleGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoCompoundRuleGuid");

                    b.Property<Guid?>("LfMoDerivAffMsaGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoDerivAffMsaGuid");

                    b.Property<Guid?>("LfMoDerivAffMsaGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("MoDerivAffMsaGuid1");

                    b.Property<Guid?>("LfMoDerivStepMsaGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoDerivStepMsaGuid");

                    b.Property<Guid?>("LfMoInflAffMsaGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoInflAffMsaGuid");

                    b.Property<Guid?>("LfMoStemMsaGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStemMsaGuid1");

                    b.Property<Guid?>("LfPictureGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PictureGuid");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("ParentPossibilityGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ParentPossibilityGuid");

                    b.Property<Guid?>("PossibilityListGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PossibilityListGuid");

                    b.Property<int>("SortSpec")
                        .HasColumnType("integer")
                        .HasColumnName("SortSpec");

                    b.Property<Guid?>("StatusRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StatusRAGuid");

                    b.Property<int>("UnderColor")
                        .HasColumnType("integer")
                        .HasColumnName("UnderColor");

                    b.Property<int>("UnderStyle")
                        .HasColumnType("integer")
                        .HasColumnName("UnderStyle");

                    b.HasKey("Guid")
                        .HasName("PK_Possibilities");

                    b.HasIndex("ConfidenceRAGuid")
                        .HasDatabaseName("IX_Possibilities_ConfidenceRAGuid");

                    b.HasIndex("LfLexEntryGuid")
                        .HasDatabaseName("IX_Possibilities_LexEntryGuid");

                    b.HasIndex("LfLexEntryGuid1")
                        .HasDatabaseName("IX_Possibilities_LexEntryGuid1");

                    b.HasIndex("LfLexEntryGuid2")
                        .HasDatabaseName("IX_Possibilities_LexEntryGuid2");

                    b.HasIndex("LfLexEtymologyGuid")
                        .HasDatabaseName("IX_Possibilities_LexEtymologyGuid");

                    b.HasIndex("LfLexPronunciationGuid")
                        .HasDatabaseName("IX_Possibilities_LexPronunciationGuid");

                    b.HasIndex("LfLexSenseGuid1")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid1");

                    b.HasIndex("LfLexSenseGuid2")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid2");

                    b.HasIndex("LfLexSenseGuid3")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid3");

                    b.HasIndex("LfLexSenseGuid4")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid4");

                    b.HasIndex("LfLexSenseGuid5")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid5");

                    b.HasIndex("LfMoCompoundRuleGuid")
                        .HasDatabaseName("IX_Possibilities_MoCompoundRuleGuid");

                    b.HasIndex("LfMoDerivAffMsaGuid")
                        .HasDatabaseName("IX_Possibilities_MoDerivAffMsaGuid");

                    b.HasIndex("LfMoDerivAffMsaGuid1")
                        .HasDatabaseName("IX_Possibilities_MoDerivAffMsaGuid1");

                    b.HasIndex("LfMoDerivStepMsaGuid")
                        .HasDatabaseName("IX_Possibilities_MoDerivStepMsaGuid");

                    b.HasIndex("LfMoInflAffMsaGuid")
                        .HasDatabaseName("IX_Possibilities_MoInflAffMsaGuid");

                    b.HasIndex("LfMoStemMsaGuid1")
                        .HasDatabaseName("IX_Possibilities_MoStemMsaGuid1");

                    b.HasIndex("LfPictureGuid")
                        .HasDatabaseName("IX_Possibilities_PictureGuid");

                    b.HasIndex("ParentPossibilityGuid")
                        .HasDatabaseName("IX_Possibilities_ParentPossibilityGuid");

                    b.HasIndex("PossibilityListGuid")
                        .HasDatabaseName("IX_Possibilities_PossibilityListGuid");

                    b.HasIndex("StatusRAGuid")
                        .HasDatabaseName("IX_Possibilities_StatusRAGuid");

                    b.ToTable("Possibilities", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("LfPossibility");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPossibilityList", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<List<LfWsTsString>>("Abbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Abbreviation");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateModified");

                    b.Property<int>("Depth")
                        .HasColumnType("integer")
                        .HasColumnName("Depth");

                    b.Property<List<LfWsTsString>>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("DisplayOption")
                        .HasColumnType("integer")
                        .HasColumnName("DisplayOption");

                    b.Property<string>("HelpFile")
                        .HasColumnType("text")
                        .HasColumnName("HelpFile");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean")
                        .HasColumnName("IsClosed");

                    b.Property<bool>("IsSorted")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSorted");

                    b.Property<bool>("IsVernacular")
                        .HasColumnType("boolean")
                        .HasColumnName("IsVernacular");

                    b.Property<int>("ItemClsid")
                        .HasColumnType("integer")
                        .HasColumnName("ItemClsid");

                    b.Property<Guid>("ListVersion")
                        .HasColumnType("uuid")
                        .HasColumnName("ListVersion");

                    b.Property<List<LfWsTsString>>("Name")
                        .HasColumnType("jsonb")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<int>("PreventChoiceAboveLevel")
                        .HasColumnType("integer")
                        .HasColumnName("PreventChoiceAboveLevel");

                    b.Property<bool>("PreventDuplicates")
                        .HasColumnType("boolean")
                        .HasColumnName("PreventDuplicates");

                    b.Property<bool>("PreventNodeChoices")
                        .HasColumnType("boolean")
                        .HasColumnName("PreventNodeChoices");

                    b.Property<bool>("UseExtendedFields")
                        .HasColumnType("boolean")
                        .HasColumnName("UseExtendedFields");

                    b.Property<string>("WritingSystem")
                        .HasColumnType("text")
                        .HasColumnName("WritingSystem");

                    b.Property<int>("WsSelector")
                        .HasColumnType("integer")
                        .HasColumnName("WsSelector");

                    b.HasKey("Guid")
                        .HasName("PK_PossibilityLists");

                    b.ToTable("PossibilityLists", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPubDivision", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<bool>("DifferentEvenHF")
                        .HasColumnType("boolean")
                        .HasColumnName("DifferentEvenHF");

                    b.Property<bool>("DifferentFirstHF")
                        .HasColumnType("boolean")
                        .HasColumnName("DifferentFirstHF");

                    b.Property<Guid?>("HFSetOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("HFSetOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfPublicationGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PublicationGuid");

                    b.Property<int>("NumColumns")
                        .HasColumnType("integer")
                        .HasColumnName("NumColumns");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("PageLayoutOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PageLayoutOAGuid");

                    b.Property<int>("StartAt")
                        .HasColumnType("integer")
                        .HasColumnName("StartAt");

                    b.HasKey("Guid")
                        .HasName("PK_PubDivision");

                    b.HasIndex("HFSetOAGuid")
                        .HasDatabaseName("IX_PubDivision_HFSetOAGuid");

                    b.HasIndex("LfPublicationGuid")
                        .HasDatabaseName("IX_PubDivision_PublicationGuid");

                    b.HasIndex("PageLayoutOAGuid")
                        .HasDatabaseName("IX_PubDivision_PageLayoutOAGuid");

                    b.ToTable("PubDivision", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPubHFSet", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("DefaultFooterOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultFooterOAGuid");

                    b.Property<Guid?>("DefaultHeaderOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultHeaderOAGuid");

                    b.Property<LfTsString>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<Guid?>("EvenFooterOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EvenFooterOAGuid");

                    b.Property<Guid?>("EvenHeaderOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EvenHeaderOAGuid");

                    b.Property<Guid?>("FirstFooterOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FirstFooterOAGuid");

                    b.Property<Guid?>("FirstHeaderOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FirstHeaderOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfPossibilityListGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PossibilityListGuid");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_PubHFSet");

                    b.HasIndex("DefaultFooterOAGuid")
                        .HasDatabaseName("IX_PubHFSet_DefaultFooterOAGuid");

                    b.HasIndex("DefaultHeaderOAGuid")
                        .HasDatabaseName("IX_PubHFSet_DefaultHeaderOAGuid");

                    b.HasIndex("EvenFooterOAGuid")
                        .HasDatabaseName("IX_PubHFSet_EvenFooterOAGuid");

                    b.HasIndex("EvenHeaderOAGuid")
                        .HasDatabaseName("IX_PubHFSet_EvenHeaderOAGuid");

                    b.HasIndex("FirstFooterOAGuid")
                        .HasDatabaseName("IX_PubHFSet_FirstFooterOAGuid");

                    b.HasIndex("FirstHeaderOAGuid")
                        .HasDatabaseName("IX_PubHFSet_FirstHeaderOAGuid");

                    b.HasIndex("LfPossibilityListGuid")
                        .HasDatabaseName("IX_PubHFSet_PossibilityListGuid");

                    b.ToTable("PubHFSet", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPubHeader", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<LfTsString>("CenteredText")
                        .HasColumnType("jsonb")
                        .HasColumnName("CenteredText");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<LfTsString>("InsideAlignedText")
                        .HasColumnType("jsonb")
                        .HasColumnName("InsideAlignedText");

                    b.Property<LfTsString>("OutsideAlignedText")
                        .HasColumnType("jsonb")
                        .HasColumnName("OutsideAlignedText");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_PubHeader");

                    b.ToTable("PubHeader", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPubPageLayout", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<LfTsString>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("boolean")
                        .HasColumnName("IsBuiltIn");

                    b.Property<bool>("IsModified")
                        .HasColumnType("boolean")
                        .HasColumnName("IsModified");

                    b.Property<int>("MarginBottom")
                        .HasColumnType("integer")
                        .HasColumnName("MarginBottom");

                    b.Property<int>("MarginInside")
                        .HasColumnType("integer")
                        .HasColumnName("MarginInside");

                    b.Property<int>("MarginOutside")
                        .HasColumnType("integer")
                        .HasColumnName("MarginOutside");

                    b.Property<int>("MarginTop")
                        .HasColumnType("integer")
                        .HasColumnName("MarginTop");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<int>("PosFooter")
                        .HasColumnType("integer")
                        .HasColumnName("PosFooter");

                    b.Property<int>("PosHeader")
                        .HasColumnType("integer")
                        .HasColumnName("PosHeader");

                    b.HasKey("Guid")
                        .HasName("PK_PubPageLayout");

                    b.ToTable("PubPageLayout", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPublication", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("BaseFontSize")
                        .HasColumnType("integer")
                        .HasColumnName("BaseFontSize");

                    b.Property<int>("BaseLineSpacing")
                        .HasColumnType("integer")
                        .HasColumnName("BaseLineSpacing");

                    b.Property<int>("BindingEdge")
                        .HasColumnType("integer")
                        .HasColumnName("BindingEdge");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<LfTsString>("Description")
                        .HasColumnType("jsonb")
                        .HasColumnName("Description");

                    b.Property<int>("FootnoteSepWidth")
                        .HasColumnType("integer")
                        .HasColumnName("FootnoteSepWidth");

                    b.Property<int>("GutterLoc")
                        .HasColumnType("integer")
                        .HasColumnName("GutterLoc");

                    b.Property<int>("GutterMargin")
                        .HasColumnType("integer")
                        .HasColumnName("GutterMargin");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<bool>("IsLandscape")
                        .HasColumnType("boolean")
                        .HasColumnName("IsLandscape");

                    b.Property<Guid?>("LfPossibilityListGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PossibilityListGuid");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<int>("PageHeight")
                        .HasColumnType("integer")
                        .HasColumnName("PageHeight");

                    b.Property<int>("PageWidth")
                        .HasColumnType("integer")
                        .HasColumnName("PageWidth");

                    b.Property<int>("PaperHeight")
                        .HasColumnType("integer")
                        .HasColumnName("PaperHeight");

                    b.Property<int>("PaperWidth")
                        .HasColumnType("integer")
                        .HasColumnName("PaperWidth");

                    b.Property<int>("SheetLayout")
                        .HasColumnType("integer")
                        .HasColumnName("SheetLayout");

                    b.Property<int>("SheetsPerSig")
                        .HasColumnType("integer")
                        .HasColumnName("SheetsPerSig");

                    b.HasKey("Guid")
                        .HasName("PK_Publication");

                    b.HasIndex("LfPossibilityListGuid")
                        .HasDatabaseName("IX_Publication_PossibilityListGuid");

                    b.ToTable("Publication", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfSegment", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("BeginOffset")
                        .HasColumnType("integer")
                        .HasColumnName("BeginOffset");

                    b.Property<string>("BeginTimeOffset")
                        .HasColumnType("text")
                        .HasColumnName("BeginTimeOffset");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<string>("EndTimeOffset")
                        .HasColumnType("text")
                        .HasColumnName("EndTimeOffset");

                    b.Property<List<LfWsTsString>>("FreeTranslation")
                        .HasColumnType("jsonb")
                        .HasColumnName("FreeTranslation");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<List<LfWsTsString>>("LiteralTranslation")
                        .HasColumnType("jsonb")
                        .HasColumnName("LiteralTranslation");

                    b.Property<Guid?>("MediaURIRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MediaURIRAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<LfTsString>("Reference")
                        .HasColumnType("jsonb")
                        .HasColumnName("Reference");

                    b.Property<Guid?>("SpeakerRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SpeakerRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_Segment");

                    b.HasIndex("MediaURIRAGuid")
                        .HasDatabaseName("IX_Segment_MediaURIRAGuid");

                    b.HasIndex("SpeakerRAGuid")
                        .HasDatabaseName("IX_Segment_SpeakerRAGuid");

                    b.ToTable("Segment", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfStPara", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfStTextGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StTextGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<TextProperty>>("StyleRules")
                        .HasColumnType("jsonb")
                        .HasColumnName("StyleRules");

                    b.HasKey("Guid")
                        .HasName("PK_StPara");

                    b.HasIndex("LfStTextGuid")
                        .HasDatabaseName("IX_StPara_StTextGuid");

                    b.ToTable("StPara", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfStText", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DateModified");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<bool>("RightToLeft")
                        .HasColumnType("boolean")
                        .HasColumnName("RightToLeft");

                    b.HasKey("Guid")
                        .HasName("PK_StText");

                    b.ToTable("StText", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfTextTag", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("BeginAnalysisIndex")
                        .HasColumnType("integer")
                        .HasColumnName("BeginAnalysisIndex");

                    b.Property<Guid?>("BeginSegmentRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("BeginSegmentRAGuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("EndAnalysisIndex")
                        .HasColumnType("integer")
                        .HasColumnName("EndAnalysisIndex");

                    b.Property<Guid?>("EndSegmentRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EndSegmentRAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfStTextGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StTextGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("TagRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("TagRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_TextTag");

                    b.HasIndex("BeginSegmentRAGuid")
                        .HasDatabaseName("IX_TextTag_BeginSegmentRAGuid");

                    b.HasIndex("EndSegmentRAGuid")
                        .HasDatabaseName("IX_TextTag_EndSegmentRAGuid");

                    b.HasIndex("LfStTextGuid")
                        .HasDatabaseName("IX_TextTag_StTextGuid");

                    b.HasIndex("TagRAGuid")
                        .HasDatabaseName("IX_TextTag_TagRAGuid");

                    b.ToTable("TextTag", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfTranslation", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfLexExampleSentenceGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexExampleSentenceGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<List<LfWsTsString>>("Status")
                        .HasColumnType("jsonb")
                        .HasColumnName("Status");

                    b.Property<List<LfWsTsString>>("Translation")
                        .HasColumnType("jsonb")
                        .HasColumnName("Translation");

                    b.Property<Guid?>("TypeRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("TypeRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_Translation");

                    b.HasIndex("LfLexExampleSentenceGuid")
                        .HasDatabaseName("IX_Translation_LexExampleSentenceGuid");

                    b.HasIndex("TypeRAGuid")
                        .HasDatabaseName("IX_Translation_TypeRAGuid");

                    b.ToTable("Translation", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiAnalysis", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<Guid?>("CategoryRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("CategoryRAGuid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<Guid?>("DerivationOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DerivationOAGuid");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfWfiWordformGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiWordformGuid");

                    b.Property<Guid?>("MsFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MsFeaturesOAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_WfiAnalysis");

                    b.HasIndex("CategoryRAGuid")
                        .HasDatabaseName("IX_WfiAnalysis_CategoryRAGuid");

                    b.HasIndex("DerivationOAGuid")
                        .HasDatabaseName("IX_WfiAnalysis_DerivationOAGuid");

                    b.HasIndex("LfWfiWordformGuid")
                        .HasDatabaseName("IX_WfiAnalysis_WfiWordformGuid");

                    b.HasIndex("MsFeaturesOAGuid")
                        .HasDatabaseName("IX_WfiAnalysis_MsFeaturesOAGuid");

                    b.ToTable("WfiAnalysis", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiGloss", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Form")
                        .HasColumnType("jsonb")
                        .HasColumnName("Form");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("LfWfiAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiAnalysisGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.HasKey("Guid")
                        .HasName("PK_WfiGloss");

                    b.HasIndex("LfWfiAnalysisGuid")
                        .HasDatabaseName("IX_WfiGloss_WfiAnalysisGuid");

                    b.ToTable("WfiGloss", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiMorphBundle", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Form")
                        .HasColumnType("jsonb")
                        .HasColumnName("Form");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<Guid?>("InflTypeRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflTypeRAGuid");

                    b.Property<Guid?>("LfWfiAnalysisGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("WfiAnalysisGuid");

                    b.Property<Guid?>("MorphRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MorphRAGuid");

                    b.Property<Guid?>("MsaRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MsaRAGuid");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<Guid?>("SenseRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SenseRAGuid");

                    b.HasKey("Guid")
                        .HasName("PK_WfiMorphBundle");

                    b.HasIndex("InflTypeRAGuid")
                        .HasDatabaseName("IX_WfiMorphBundle_InflTypeRAGuid");

                    b.HasIndex("LfWfiAnalysisGuid")
                        .HasDatabaseName("IX_WfiMorphBundle_WfiAnalysisGuid");

                    b.HasIndex("MorphRAGuid")
                        .HasDatabaseName("IX_WfiMorphBundle_MorphRAGuid");

                    b.HasIndex("MsaRAGuid")
                        .HasDatabaseName("IX_WfiMorphBundle_MsaRAGuid");

                    b.HasIndex("SenseRAGuid")
                        .HasDatabaseName("IX_WfiMorphBundle_SenseRAGuid");

                    b.ToTable("WfiMorphBundle", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiWordform", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Guid");

                    b.Property<int>("Checksum")
                        .HasColumnType("integer")
                        .HasColumnName("Checksum");

                    b.Property<int>("ClassID")
                        .HasColumnType("integer")
                        .HasColumnName("ClassID");

                    b.Property<List<LfWsTsString>>("Form")
                        .HasColumnType("jsonb")
                        .HasColumnName("Form");

                    b.Property<int>("Hvo")
                        .HasColumnType("integer")
                        .HasColumnName("Hvo");

                    b.Property<int>("OwnOrd")
                        .HasColumnType("integer")
                        .HasColumnName("OwnOrd");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uuid")
                        .HasColumnName("Owner");

                    b.Property<int>("OwningFlid")
                        .HasColumnType("integer")
                        .HasColumnName("OwningFlid");

                    b.Property<int>("SpellingStatus")
                        .HasColumnType("integer")
                        .HasColumnName("SpellingStatus");

                    b.HasKey("Guid")
                        .HasName("PK_WfiWordform");

                    b.ToTable("WfiWordform", (string)null);
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoAffixForm", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoForm");

                    b.HasDiscriminator().HasValue("LfMoAffixForm");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemAllomorph", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoForm");

                    b.Property<Guid?>("StemNameRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StemNameRAGuid");

                    b.HasIndex("StemNameRAGuid")
                        .HasDatabaseName("IX_MoForm_StemNameRAGuid");

                    b.HasDiscriminator().HasValue("LfMoStemAllomorph");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivAffMsa", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoMorphSynAnalysis");

                    b.Property<Guid?>("AffixCategoryRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AffixCategoryRAGuid");

                    b.Property<Guid?>("FromInflectionClassRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FromInflectionClassRAGuid");

                    b.Property<Guid?>("FromMsFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FromMsFeaturesOAGuid");

                    b.Property<Guid?>("FromPartOfSpeechRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FromPartOfSpeechRAGuid");

                    b.Property<Guid?>("FromStemNameRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("FromStemNameRAGuid");

                    b.Property<Guid?>("StratumRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StratumRAGuid");

                    b.Property<Guid?>("ToInflectionClassRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ToInflectionClassRAGuid");

                    b.Property<Guid?>("ToMsFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ToMsFeaturesOAGuid");

                    b.Property<Guid?>("ToPartOfSpeechRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("ToPartOfSpeechRAGuid");

                    b.HasIndex("AffixCategoryRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_AffixCategoryRAGuid1");

                    b.HasIndex("FromInflectionClassRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_FromInflectionClassRAGuid");

                    b.HasIndex("FromMsFeaturesOAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_FromMsFeaturesOAGuid");

                    b.HasIndex("FromPartOfSpeechRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_FromPartOfSpeechRAGuid");

                    b.HasIndex("FromStemNameRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_FromStemNameRAGuid");

                    b.HasIndex("StratumRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_StratumRAGuid");

                    b.HasIndex("ToInflectionClassRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_ToInflectionClassRAGuid");

                    b.HasIndex("ToMsFeaturesOAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_ToMsFeaturesOAGuid");

                    b.HasIndex("ToPartOfSpeechRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_ToPartOfSpeechRAGuid");

                    b.ToTable("MoMorphSynAnalysis", t =>
                        {
                            t.Property("AffixCategoryRAGuid")
                                .HasColumnName("MoDerivAffMsa_AffixCategoryRAGuid");
                        });

                    b.HasDiscriminator().HasValue("LfMoDerivAffMsa");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivStepMsa", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoMorphSynAnalysis");

                    b.Property<Guid?>("InflFeatsOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflFeatsOAGuid");

                    b.Property<Guid?>("InflectionClassRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflectionClassRAGuid");

                    b.Property<Guid?>("MsFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MsFeaturesOAGuid");

                    b.Property<Guid?>("PartOfSpeechRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechRAGuid");

                    b.HasIndex("InflFeatsOAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_InflFeatsOAGuid1");

                    b.HasIndex("InflectionClassRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_InflectionClassRAGuid");

                    b.HasIndex("MsFeaturesOAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_MsFeaturesOAGuid");

                    b.HasIndex("PartOfSpeechRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_PartOfSpeechRAGuid1");

                    b.ToTable("MoMorphSynAnalysis", t =>
                        {
                            t.Property("InflFeatsOAGuid")
                                .HasColumnName("MoDerivStepMsa_InflFeatsOAGuid");

                            t.Property("PartOfSpeechRAGuid")
                                .HasColumnName("MoDerivStepMsa_PartOfSpeechRAGuid");
                        });

                    b.HasDiscriminator().HasValue("LfMoDerivStepMsa");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffMsa", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoMorphSynAnalysis");

                    b.Property<Guid?>("AffixCategoryRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("AffixCategoryRAGuid");

                    b.Property<Guid?>("InflFeatsOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflFeatsOAGuid");

                    b.Property<Guid?>("PartOfSpeechRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechRAGuid");

                    b.HasIndex("AffixCategoryRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_AffixCategoryRAGuid");

                    b.HasIndex("InflFeatsOAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_InflFeatsOAGuid");

                    b.HasIndex("PartOfSpeechRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_PartOfSpeechRAGuid");

                    b.HasDiscriminator().HasValue("LfMoInflAffMsa");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemMsa", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoMorphSynAnalysis");

                    b.Property<Guid?>("InflectionClassRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflectionClassRAGuid");

                    b.Property<Guid?>("MsFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MsFeaturesOAGuid");

                    b.Property<Guid?>("PartOfSpeechRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PartOfSpeechRAGuid");

                    b.Property<Guid?>("StratumRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("StratumRAGuid");

                    b.HasIndex("InflectionClassRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_InflectionClassRAGuid1");

                    b.HasIndex("MsFeaturesOAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_MsFeaturesOAGuid1");

                    b.HasIndex("PartOfSpeechRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_PartOfSpeechRAGuid2");

                    b.HasIndex("StratumRAGuid")
                        .HasDatabaseName("IX_MoMorphSynAnalysis_StratumRAGuid1");

                    b.ToTable("MoMorphSynAnalysis", t =>
                        {
                            t.Property("InflectionClassRAGuid")
                                .HasColumnName("MoStemMsa_InflectionClassRAGuid");

                            t.Property("MsFeaturesOAGuid")
                                .HasColumnName("MoStemMsa_MsFeaturesOAGuid");

                            t.Property("PartOfSpeechRAGuid")
                                .HasColumnName("MoStemMsa_PartOfSpeechRAGuid");

                            t.Property("StratumRAGuid")
                                .HasColumnName("MoStemMsa_StratumRAGuid");
                        });

                    b.HasDiscriminator().HasValue("LfMoStemMsa");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfAnthroItem", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<Guid?>("LfSemanticDomainGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SemanticDomainGuid");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid");

                    b.HasIndex("LfSemanticDomainGuid")
                        .HasDatabaseName("IX_Possibilities_SemanticDomainGuid");

                    b.HasDiscriminator().HasValue("LfAnthroItem");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryType", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<Guid?>("LfLexEntryRefGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryRefGuid");

                    b.Property<Guid?>("LfLexEntryRefGuid1")
                        .HasColumnType("uuid")
                        .HasColumnName("LexEntryRefGuid1");

                    b.Property<List<LfWsTsString>>("ReverseAbbr")
                        .HasColumnType("jsonb")
                        .HasColumnName("ReverseAbbr");

                    b.Property<List<LfWsTsString>>("ReverseName")
                        .HasColumnType("jsonb")
                        .HasColumnName("ReverseName");

                    b.HasIndex("LfLexEntryRefGuid")
                        .HasDatabaseName("IX_Possibilities_LexEntryRefGuid");

                    b.HasIndex("LfLexEntryRefGuid1")
                        .HasDatabaseName("IX_Possibilities_LexEntryRefGuid1");

                    b.ToTable("Possibilities", t =>
                        {
                            t.Property("ReverseName")
                                .HasColumnName("LexEntryType_ReverseName");
                        });

                    b.HasDiscriminator().HasValue("LfLexEntryType");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexRefType", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<int>("MappingType")
                        .HasColumnType("integer")
                        .HasColumnName("MappingType");

                    b.Property<List<LfWsTsString>>("ReverseAbbreviation")
                        .HasColumnType("jsonb")
                        .HasColumnName("ReverseAbbreviation");

                    b.Property<List<LfWsTsString>>("ReverseName")
                        .HasColumnType("jsonb")
                        .HasColumnName("ReverseName");

                    b.HasDiscriminator().HasValue("LfLexRefType");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLocation", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<List<LfWsTsString>>("Alias")
                        .HasColumnType("jsonb")
                        .HasColumnName("Alias");

                    b.ToTable("Possibilities", t =>
                        {
                            t.Property("Alias")
                                .HasColumnName("Location_Alias");
                        });

                    b.HasDiscriminator().HasValue("LfLocation");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoMorphType", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<string>("Postfix")
                        .HasColumnType("text")
                        .HasColumnName("Postfix");

                    b.Property<string>("Prefix")
                        .HasColumnType("text")
                        .HasColumnName("Prefix");

                    b.Property<int>("SecondaryOrder")
                        .HasColumnType("integer")
                        .HasColumnName("SecondaryOrder");

                    b.HasDiscriminator().HasValue("LfMoMorphType");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPartOfSpeech", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<string>("CatalogSourceId")
                        .HasColumnType("text")
                        .HasColumnName("CatalogSourceId");

                    b.Property<Guid?>("DefaultFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultFeaturesOAGuid");

                    b.Property<Guid?>("DefaultInflectionClassRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("DefaultInflectionClassRAGuid");

                    b.Property<Guid?>("InherFeatValOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InherFeatValOAGuid");

                    b.Property<Guid?>("LfMoStemMsaGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MoStemMsaGuid");

                    b.HasIndex("DefaultFeaturesOAGuid")
                        .HasDatabaseName("IX_Possibilities_DefaultFeaturesOAGuid");

                    b.HasIndex("DefaultInflectionClassRAGuid")
                        .HasDatabaseName("IX_Possibilities_DefaultInflectionClassRAGuid");

                    b.HasIndex("InherFeatValOAGuid")
                        .HasDatabaseName("IX_Possibilities_InherFeatValOAGuid");

                    b.HasIndex("LfMoStemMsaGuid")
                        .HasDatabaseName("IX_Possibilities_MoStemMsaGuid");

                    b.HasDiscriminator().HasValue("LfPartOfSpeech");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPerson", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<List<LfWsTsString>>("Alias")
                        .HasColumnType("jsonb")
                        .HasColumnName("Alias");

                    b.Property<GenDate>("DateOfBirth")
                        .HasColumnType("jsonb")
                        .HasColumnName("DateOfBirth");

                    b.Property<GenDate>("DateOfDeath")
                        .HasColumnType("jsonb")
                        .HasColumnName("DateOfDeath");

                    b.Property<Guid?>("EducationRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("EducationRAGuid");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("Gender");

                    b.Property<bool>("IsResearcher")
                        .HasColumnType("boolean")
                        .HasColumnName("IsResearcher");

                    b.Property<Guid?>("PlaceOfBirthRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("PlaceOfBirthRAGuid");

                    b.HasIndex("EducationRAGuid")
                        .HasDatabaseName("IX_Possibilities_EducationRAGuid");

                    b.HasIndex("PlaceOfBirthRAGuid")
                        .HasDatabaseName("IX_Possibilities_PlaceOfBirthRAGuid");

                    b.HasDiscriminator().HasValue("LfPerson");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfSemanticDomain", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfPossibility");

                    b.Property<Guid?>("LfLexSenseGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("LexSenseGuid");

                    b.Property<Guid?>("LfSemanticDomainGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("SemanticDomainGuid");

                    b.Property<string>("LouwNidaCodes")
                        .HasColumnType("text")
                        .HasColumnName("LouwNidaCodes");

                    b.Property<string>("OcmCodes")
                        .HasColumnType("text")
                        .HasColumnName("OcmCodes");

                    b.HasIndex("LfLexSenseGuid")
                        .HasDatabaseName("IX_Possibilities_LexSenseGuid6");

                    b.HasIndex("LfSemanticDomainGuid")
                        .HasDatabaseName("IX_Possibilities_SemanticDomainGuid1");

                    b.ToTable("Possibilities", t =>
                        {
                            t.Property("LfLexSenseGuid")
                                .HasColumnName("SemanticDomain_LexSenseGuid");

                            t.Property("LfSemanticDomainGuid")
                                .HasColumnName("SemanticDomain_SemanticDomainGuid");
                        });

                    b.HasDiscriminator().HasValue("LfSemanticDomain");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoAffixAllomorph", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfMoAffixForm");

                    b.Property<Guid?>("MsEnvFeaturesOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MsEnvFeaturesOAGuid");

                    b.Property<Guid?>("MsEnvPartOfSpeechRAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("MsEnvPartOfSpeechRAGuid");

                    b.HasIndex("MsEnvFeaturesOAGuid")
                        .HasDatabaseName("IX_MoForm_MsEnvFeaturesOAGuid");

                    b.HasIndex("MsEnvPartOfSpeechRAGuid")
                        .HasDatabaseName("IX_MoForm_MsEnvPartOfSpeechRAGuid");

                    b.HasDiscriminator().HasValue("LfMoAffixAllomorph");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryInflType", b =>
                {
                    b.HasBaseType("LfSync.Data.LCModel.LfLexEntryType");

                    b.Property<List<LfWsTsString>>("GlossAppend")
                        .HasColumnType("jsonb")
                        .HasColumnName("GlossAppend");

                    b.Property<List<LfWsTsString>>("GlossPrepend")
                        .HasColumnType("jsonb")
                        .HasColumnName("GlossPrepend");

                    b.Property<Guid?>("InflFeatsOAGuid")
                        .HasColumnType("uuid")
                        .HasColumnName("InflFeatsOAGuid");

                    b.HasIndex("InflFeatsOAGuid")
                        .HasDatabaseName("IX_Possibilities_InflFeatsOAGuid");

                    b.ToTable("Possibilities", t =>
                        {
                            t.Property("ReverseName")
                                .HasColumnName("LexEntryType_ReverseName");
                        });

                    b.HasDiscriminator().HasValue("LfLexEntryInflType");
                });

            modelBuilder.Entity("LfFsFeatStrucLfFsFeatStrucDisj", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", null)
                        .WithMany()
                        .HasForeignKey("ContentsOCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FsFeatStrucFsFeatStrucDisj_FsFeatStruc_ContentsOCTempId");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStrucDisj", null)
                        .WithMany()
                        .HasForeignKey("FeatureDisjunctionsOCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FsFeatStrucFsFeatStrucDisj_FsFeatStrucDisj_FeatureDisjuncti~");
                });

            modelBuilder.Entity("LfLexExampleSentenceLfPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", null)
                        .WithMany()
                        .HasForeignKey("DoNotPublishInRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LexExampleSentence_DoNotPublishInRC_Possibilities_DoNotPu~");

                    b.HasOne("LfSync.Data.LCModel.LfLexExampleSentence", null)
                        .WithMany()
                        .HasForeignKey("LfLexExampleSentenceGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LexExampleSentence_DoNotPublishInRC_ExampleSentences_LexE~");
                });

            modelBuilder.Entity("LfLocationLfPerson", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPerson", null)
                        .WithMany()
                        .HasForeignKey("LfPersonGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LocationPerson_Possibilities_PersonGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLocation", null)
                        .WithMany()
                        .HasForeignKey("PlacesOfResidenceRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LocationPerson_Possibilities_PlacesOfResidenceRCGuid");
                });

            modelBuilder.Entity("LfPersonLfPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", null)
                        .WithMany()
                        .HasForeignKey("LfPossibility1Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Possibility_ResearchersRC_Possibilities_Possibility1Guid");

                    b.HasOne("LfSync.Data.LCModel.LfPerson", null)
                        .WithMany()
                        .HasForeignKey("ResearchersRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Possibility_ResearchersRC_Possibilities_ResearchersRCGuid");
                });

            modelBuilder.Entity("LfPersonLfPossibility1", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPerson", null)
                        .WithMany()
                        .HasForeignKey("LfPerson1Guid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Person_PositionsRC_Possibilities_Person1Guid");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", null)
                        .WithMany()
                        .HasForeignKey("PositionsRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Person_PositionsRC_Possibilities_PositionsRCGuid");
                });

            modelBuilder.Entity("LfPossibilityLfPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", null)
                        .WithMany()
                        .HasForeignKey("LfPossibilityGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Possibility_RestrictionsRC_Possibilities_PossibilityGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", null)
                        .WithMany()
                        .HasForeignKey("RestrictionsRCGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Possibility_RestrictionsRC_Possibilities_RestrictionsRCGu~");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfAgentEvaluation", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", null)
                        .WithMany("EvaluationsRC")
                        .HasForeignKey("LfWfiAnalysisGuid")
                        .HasConstraintName("FK_AgentEvaluation_WfiAnalysis_WfiAnalysisTempId1");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfAnalysis", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", "Analysis")
                        .WithMany()
                        .HasForeignKey("AnalysisGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Analysis_WfiAnalysis_AnalysisTempId");

                    b.HasOne("LfSync.Data.LCModel.LfSegment", null)
                        .WithMany("AnalysesRS")
                        .HasForeignKey("LfSegmentGuid")
                        .HasConstraintName("FK_Analysis_Segment_SegmentTempId2");

                    b.HasOne("LfSync.Data.LCModel.LfWfiWordform", "Wordform")
                        .WithMany()
                        .HasForeignKey("WordformGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Analysis_WfiWordform_WordformTempId1");

                    b.Navigation("Analysis");

                    b.Navigation("Wordform");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfDomainQ", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfSemanticDomain", null)
                        .WithMany("QuestionsOS")
                        .HasForeignKey("LfSemanticDomainGuid")
                        .HasConstraintName("FK_DomainQ_Possibilities_SemanticDomainTempId18");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatDefn", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatureSpecification", "DefaultOA")
                        .WithMany()
                        .HasForeignKey("DefaultOAGuid")
                        .HasConstraintName("FK_FsFeatDefn_FsFeatureSpecification_DefaultOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStrucType", null)
                        .WithMany("FeaturesRS")
                        .HasForeignKey("LfFsFeatStrucTypeGuid")
                        .HasConstraintName("FK_FsFeatDefn_FsFeatStrucType_FsFeatStrucTypeTempId");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("InflectableFeatsRC")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_FsFeatDefn_Possibilities_PartOfSpeechTempId15");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("BearableFeaturesRC")
                        .HasForeignKey("LfPartOfSpeechGuid1")
                        .HasConstraintName("FK_FsFeatDefn_Possibilities_PartOfSpeechTempId8");

                    b.Navigation("DefaultOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatStruc", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", null)
                        .WithMany("ReferenceFormsOC")
                        .HasForeignKey("LfMoInflClassGuid")
                        .HasConstraintName("FK_FsFeatStruc_MoInflClass_MoInflClassTempId4");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemName", null)
                        .WithMany("RegionsOC")
                        .HasForeignKey("LfMoStemNameGuid")
                        .HasConstraintName("FK_FsFeatStruc_MoStemName_MoStemNameTempId2");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("ReferenceFormsOC")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_FsFeatStruc_Possibilities_PartOfSpeechTempId16");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("EmptyParadigmCellsOC")
                        .HasForeignKey("LfPartOfSpeechGuid1")
                        .HasConstraintName("FK_FsFeatStruc_Possibilities_PartOfSpeechTempId9");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStrucType", "TypeRA")
                        .WithMany()
                        .HasForeignKey("TypeRAGuid")
                        .HasConstraintName("FK_FsFeatStruc_FsFeatStrucType_TypeRATempId1");

                    b.Navigation("TypeRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatureSpecification", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatDefn", "FeatureRA")
                        .WithMany()
                        .HasForeignKey("FeatureRAGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FsFeatureSpecification_FsFeatDefn_FeatureRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", null)
                        .WithMany("FeatureSpecsOC")
                        .HasForeignKey("LfFsFeatStrucGuid")
                        .HasConstraintName("FK_FsFeatureSpecification_FsFeatStruc_FsFeatStrucGuid");

                    b.Navigation("FeatureRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexAppendix", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfStText", "ContentsOA")
                        .WithMany()
                        .HasForeignKey("ContentsOAGuid")
                        .HasConstraintName("FK_LexAppendix_StText_ContentsOATempId");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("AppendixesRC")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_LexAppendix_Senses_LexSenseTempId1");

                    b.Navigation("ContentsOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntry", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoForm", "LexemeFormOA")
                        .WithMany()
                        .HasForeignKey("LexemeFormOAGuid")
                        .HasConstraintName("FK_Entries_MoForm_LexemeFormOATempId3");

                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", null)
                        .WithMany("StemsRC")
                        .HasForeignKey("LfWfiAnalysisGuid")
                        .HasConstraintName("FK_Entries_WfiAnalysis_WfiAnalysisTempId2");

                    b.Navigation("LexemeFormOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryRef", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("EntryRefsOS")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_LexEntryRef_Entries_LexEntryGuid");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEtymology", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("EtymologyOS")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_LexEtymology_Entries_LexEntryGuid");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExampleSentence", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexExtendedNote", null)
                        .WithMany("ExamplesOS")
                        .HasForeignKey("LfLexExtendedNoteGuid")
                        .HasConstraintName("FK_ExampleSentences_LexExtendedNote_LexExtendedNoteTempId");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("ExamplesOS")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_ExampleSentences_Senses_LexSenseTempId2");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExtendedNote", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "ExtendedNoteTypeRA")
                        .WithMany()
                        .HasForeignKey("ExtendedNoteTypeRAGuid")
                        .HasConstraintName("FK_LexExtendedNote_Possibilities_ExtendedNoteTypeRATempId3");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("ExtendedNoteOS")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_LexExtendedNote_Senses_LexSenseTempId3");

                    b.Navigation("ExtendedNoteTypeRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexPronunciation", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("PronunciationsOS")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_LexPronunciation_Entries_LexEntryGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLocation", "LocationRA")
                        .WithMany()
                        .HasForeignKey("LocationRAGuid")
                        .HasConstraintName("FK_LexPronunciation_Possibilities_LocationRATempId20");

                    b.Navigation("LocationRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexReference", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexRefType", null)
                        .WithMany("MembersOC")
                        .HasForeignKey("LfLexRefTypeGuid")
                        .HasConstraintName("FK_LexReference_Possibilities_LexRefTypeTempId7");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexSense", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("SensesOS")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_Senses_Entries_LexEntryGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("SensesOS")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_Senses_Senses_LexSenseGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoMorphSynAnalysis", "MorphoSyntaxAnalysisRA")
                        .WithMany()
                        .HasForeignKey("MorphoSyntaxAnalysisRAGuid")
                        .HasConstraintName("FK_Senses_MoMorphSynAnalysis_MorphoSyntaxAnalysisRATempId13");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "SenseTypeRA")
                        .WithMany()
                        .HasForeignKey("SenseTypeRAGuid")
                        .HasConstraintName("FK_Senses_Possibilities_SenseTypeRATempId26");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "StatusRA")
                        .WithMany()
                        .HasForeignKey("StatusRAGuid")
                        .HasConstraintName("FK_Senses_Possibilities_StatusRATempId28");

                    b.Navigation("MorphoSyntaxAnalysisRA");

                    b.Navigation("SenseTypeRA");

                    b.Navigation("StatusRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMedia", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexPronunciation", null)
                        .WithMany("MediaFilesOS")
                        .HasForeignKey("LfLexPronunciationGuid")
                        .HasConstraintName("FK_Media_LexPronunciation_LexPronunciationGuid");

                    b.HasOne("LfSync.Data.LCModel.LfFile", "MediaFileRA")
                        .WithMany()
                        .HasForeignKey("MediaFileRAGuid")
                        .HasConstraintName("FK_Media_File_MediaFileRAGuid");

                    b.Navigation("MediaFileRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoCompoundRule", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", null)
                        .WithMany("CompoundRuleAppsRS")
                        .HasForeignKey("LfWfiAnalysisGuid")
                        .HasConstraintName("FK_MoCompoundRule_WfiAnalysis_WfiAnalysisTempId3");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratum", "StratumRA")
                        .WithMany()
                        .HasForeignKey("StratumRAGuid")
                        .HasConstraintName("FK_MoCompoundRule_MoStratum_StratumRATempId");

                    b.Navigation("StratumRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoCompoundRuleApp", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoStemAllomorph", "LeftFormRA")
                        .WithMany()
                        .HasForeignKey("LeftFormRAGuid")
                        .HasConstraintName("FK_MoCompoundRuleApp_MoForm_LeftFormRATempId2");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratumApp", null)
                        .WithMany("CompoundRuleAppsOS")
                        .HasForeignKey("LfMoStratumAppGuid")
                        .HasConstraintName("FK_MoCompoundRuleApp_MoStratumApp_MoStratumAppTempId");

                    b.HasOne("LfSync.Data.LCModel.LfMoAffixAllomorph", "LinkerRA")
                        .WithMany()
                        .HasForeignKey("LinkerRAGuid")
                        .HasConstraintName("FK_MoCompoundRuleApp_MoForm_LinkerRATempId8");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemAllomorph", "RightFormRA")
                        .WithMany()
                        .HasForeignKey("RightFormRAGuid")
                        .HasConstraintName("FK_MoCompoundRuleApp_MoForm_RightFormRATempId10");

                    b.Navigation("LeftFormRA");

                    b.Navigation("LinkerRA");

                    b.Navigation("RightFormRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDeriv", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "InflectionalFeatsOA")
                        .WithMany()
                        .HasForeignKey("InflectionalFeatsOAGuid")
                        .HasConstraintName("FK_MoDeriv_FsFeatStruc_InflectionalFeatsOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemAllomorph", "StemFormRA")
                        .WithMany()
                        .HasForeignKey("StemFormRAGuid")
                        .HasConstraintName("FK_MoDeriv_MoForm_StemFormRATempId11");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemMsa", "StemMsaRA")
                        .WithMany()
                        .HasForeignKey("StemMsaRAGuid")
                        .HasConstraintName("FK_MoDeriv_MoMorphSynAnalysis_StemMsaRATempId16");

                    b.Navigation("InflectionalFeatsOA");

                    b.Navigation("StemFormRA");

                    b.Navigation("StemMsaRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivAffApp", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoAffixAllomorph", "AffixFormRA")
                        .WithMany()
                        .HasForeignKey("AffixFormRAGuid")
                        .HasConstraintName("FK_MoDerivAffApp_MoForm_AffixFormRATempId");

                    b.HasOne("LfSync.Data.LCModel.LfMoDerivAffMsa", "AffixMsaRA")
                        .WithMany()
                        .HasForeignKey("AffixMsaRAGuid")
                        .HasConstraintName("FK_MoDerivAffApp_MoMorphSynAnalysis_AffixMsaRATempId");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratumApp", null)
                        .WithMany("DerivAffAppOS")
                        .HasForeignKey("LfMoStratumAppGuid")
                        .HasConstraintName("FK_MoDerivAffApp_MoStratumApp_MoStratumAppTempId1");

                    b.HasOne("LfSync.Data.LCModel.LfMoDerivStepMsa", "OutputMsaOA")
                        .WithMany()
                        .HasForeignKey("OutputMsaOAGuid")
                        .HasConstraintName("FK_MoDerivAffApp_MoMorphSynAnalysis_OutputMsaOATempId15");

                    b.Navigation("AffixFormRA");

                    b.Navigation("AffixMsaRA");

                    b.Navigation("OutputMsaOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoForm", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("AlternateFormsOS")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_MoForm_Entries_LexEntryGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoMorphType", "MorphTypeRA")
                        .WithMany()
                        .HasForeignKey("MorphTypeRAGuid")
                        .HasConstraintName("FK_MoForm_Possibilities_MorphTypeRATempId21");

                    b.Navigation("MorphTypeRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoGlossItem", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "FeatStructFragOA")
                        .WithMany()
                        .HasForeignKey("FeatStructFragOAGuid")
                        .HasConstraintName("FK_MoGlossItem_FsFeatStruc_FeatStructFragOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoMorphSynAnalysis", null)
                        .WithMany("GlossBundleRS")
                        .HasForeignKey("LfMoMorphSynAnalysisGuid")
                        .HasConstraintName("FK_MoGlossItem_MoMorphSynAnalysis_MoMorphSynAnalysisTempId8");

                    b.HasOne("LfSync.Data.LCModel.LfMoGlossItem", "TargetRA")
                        .WithMany("GlossItemsOS")
                        .HasForeignKey("TargetRAGuid")
                        .HasConstraintName("FK_MoGlossItem_MoGlossItem_TargetRAGuid");

                    b.Navigation("FeatStructFragOA");

                    b.Navigation("TargetRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixSlot", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntryInflType", null)
                        .WithMany("SlotsRC")
                        .HasForeignKey("LfLexEntryInflTypeGuid")
                        .HasConstraintName("FK_MoInflAffixSlot_Possibilities_LexEntryInflTypeTempId6");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffMsa", null)
                        .WithMany("SlotsRC")
                        .HasForeignKey("LfMoInflAffMsaGuid")
                        .HasConstraintName("FK_MoInflAffixSlot_MoMorphSynAnalysis_MoInflAffMsaTempId6");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixTemplate", null)
                        .WithMany("EncliticSlotsRS")
                        .HasForeignKey("LfMoInflAffixTemplateGuid")
                        .HasConstraintName("FK_MoInflAffixSlot_MoInflAffixTemplate_MoInflAffixTemplateTemp~");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixTemplate", null)
                        .WithMany("PrefixSlotsRS")
                        .HasForeignKey("LfMoInflAffixTemplateGuid1")
                        .HasConstraintName("FK_MoInflAffixSlot_MoInflAffixTemplate_MoInflAffixTemplateTem~1");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixTemplate", null)
                        .WithMany("ProcliticSlotsRS")
                        .HasForeignKey("LfMoInflAffixTemplateGuid2")
                        .HasConstraintName("FK_MoInflAffixSlot_MoInflAffixTemplate_MoInflAffixTemplateTem~2");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixTemplate", null)
                        .WithMany("SlotsRS")
                        .HasForeignKey("LfMoInflAffixTemplateGuid3")
                        .HasConstraintName("FK_MoInflAffixSlot_MoInflAffixTemplate_MoInflAffixTemplateTem~3");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixTemplate", null)
                        .WithMany("SuffixSlotsRS")
                        .HasForeignKey("LfMoInflAffixTemplateGuid4")
                        .HasConstraintName("FK_MoInflAffixSlot_MoInflAffixTemplate_MoInflAffixTemplateTem~4");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemMsa", null)
                        .WithMany("SlotsRC")
                        .HasForeignKey("LfMoStemMsaGuid")
                        .HasConstraintName("FK_MoInflAffixSlot_MoMorphSynAnalysis_MoStemMsaTempId10");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("AffixSlotsOC")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_MoInflAffixSlot_Possibilities_PartOfSpeechTempId10");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixSlotApp", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoAffixForm", "AffixFormRA")
                        .WithMany()
                        .HasForeignKey("AffixFormRAGuid")
                        .HasConstraintName("FK_MoInflAffixSlotApp_MoForm_AffixFormRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffMsa", "AffixMsaRA")
                        .WithMany()
                        .HasForeignKey("AffixMsaRAGuid")
                        .HasConstraintName("FK_MoInflAffixSlotApp_MoMorphSynAnalysis_AffixMsaRATempId1");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflTemplateApp", null)
                        .WithMany("SlotAppsOS")
                        .HasForeignKey("LfMoInflTemplateAppGuid")
                        .HasConstraintName("FK_MoInflAffixSlotApp_MoInflTemplateApp_MoInflTemplateAppTempId");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixSlot", "SlotRA")
                        .WithMany()
                        .HasForeignKey("SlotRAGuid")
                        .HasConstraintName("FK_MoInflAffixSlotApp_MoInflAffixSlot_SlotRAGuid");

                    b.Navigation("AffixFormRA");

                    b.Navigation("AffixMsaRA");

                    b.Navigation("SlotRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixTemplate", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("AffixTemplatesOS")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_MoInflAffixTemplate_Possibilities_PartOfSpeechTempId11");

                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", null)
                        .WithMany("InflTemplateAppsRS")
                        .HasForeignKey("LfWfiAnalysisGuid")
                        .HasConstraintName("FK_MoInflAffixTemplate_WfiAnalysis_WfiAnalysisTempId4");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "RegionOA")
                        .WithMany()
                        .HasForeignKey("RegionOAGuid")
                        .HasConstraintName("FK_MoInflAffixTemplate_FsFeatStruc_RegionOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratum", "StratumRA")
                        .WithMany()
                        .HasForeignKey("StratumRAGuid")
                        .HasConstraintName("FK_MoInflAffixTemplate_MoStratum_StratumRATempId2");

                    b.Navigation("RegionOA");

                    b.Navigation("StratumRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflClass", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoAffixForm", null)
                        .WithMany("InflectionClassesRC")
                        .HasForeignKey("LfMoAffixFormGuid")
                        .HasConstraintName("FK_MoInflClass_MoForm_MoAffixFormGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", null)
                        .WithMany("SubclassesOC")
                        .HasForeignKey("LfMoInflClassGuid")
                        .HasConstraintName("FK_MoInflClass_MoInflClass_MoInflClassGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("InflectionClassesOC")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_MoInflClass_Possibilities_PartOfSpeechTempId12");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflTemplateApp", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffixTemplate", "TemplateRA")
                        .WithMany()
                        .HasForeignKey("TemplateRAGuid")
                        .HasConstraintName("FK_MoInflTemplateApp_MoInflAffixTemplate_TemplateRAGuid");

                    b.Navigation("TemplateRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoMorphSynAnalysis", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("MorphoSyntaxAnalysesOC")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Entries_LexEntryGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoMorphSynAnalysis", null)
                        .WithMany("ComponentsRS")
                        .HasForeignKey("LfMoMorphSynAnalysisGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoMorphSynAnalysis_MoMorphSynAnalysisG~");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoPhonolRuleApp", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoStratumApp", null)
                        .WithMany("PRuleAppsOS")
                        .HasForeignKey("LfMoStratumAppGuid")
                        .HasConstraintName("FK_MoPhonolRuleApp_MoStratumApp_MoStratumAppTempId2");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoReferralRule", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "InputOA")
                        .WithMany()
                        .HasForeignKey("InputOAGuid")
                        .HasConstraintName("FK_MoReferralRule_FsFeatStruc_InputOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", null)
                        .WithMany("RulesOfReferralOS")
                        .HasForeignKey("LfMoInflClassGuid")
                        .HasConstraintName("FK_MoReferralRule_MoInflClass_MoInflClassGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("RulesOfReferralOS")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_MoReferralRule_Possibilities_PartOfSpeechTempId13");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "OutputOA")
                        .WithMany()
                        .HasForeignKey("OutputOAGuid")
                        .HasConstraintName("FK_MoReferralRule_FsFeatStruc_OutputOAGuid");

                    b.Navigation("InputOA");

                    b.Navigation("OutputOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemName", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffMsa", "DefaultAffixRA")
                        .WithMany()
                        .HasForeignKey("DefaultAffixRAGuid")
                        .HasConstraintName("FK_MoStemName_MoMorphSynAnalysis_DefaultAffixRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemName", "DefaultStemRA")
                        .WithMany()
                        .HasForeignKey("DefaultStemRAGuid")
                        .HasConstraintName("FK_MoStemName_MoStemName_DefaultStemRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", null)
                        .WithMany("StemNamesOC")
                        .HasForeignKey("LfMoInflClassGuid")
                        .HasConstraintName("FK_MoStemName_MoInflClass_MoInflClassGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", null)
                        .WithMany("StemNamesOC")
                        .HasForeignKey("LfPartOfSpeechGuid")
                        .HasConstraintName("FK_MoStemName_Possibilities_PartOfSpeechTempId14");

                    b.Navigation("DefaultAffixRA");

                    b.Navigation("DefaultStemRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStratum", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPhPhonemeSet", "PhonemesRA")
                        .WithMany()
                        .HasForeignKey("PhonemesRAGuid")
                        .HasConstraintName("FK_MoStratum_PhPhonemeSet_PhonemesRATempId2");

                    b.Navigation("PhonemesRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStratumApp", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoDeriv", null)
                        .WithMany("StratumAppsOS")
                        .HasForeignKey("LfMoDerivGuid")
                        .HasConstraintName("FK_MoStratumApp_MoDeriv_MoDerivGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratum", "StratumRA")
                        .WithMany()
                        .HasForeignKey("StratumRAGuid")
                        .HasConstraintName("FK_MoStratumApp_MoStratum_StratumRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflTemplateApp", "TemplateAppOA")
                        .WithMany()
                        .HasForeignKey("TemplateAppOAGuid")
                        .HasConstraintName("FK_MoStratumApp_MoInflTemplateApp_TemplateAppOAGuid");

                    b.Navigation("StratumRA");

                    b.Navigation("TemplateAppOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfNote", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfSegment", null)
                        .WithMany("NotesOS")
                        .HasForeignKey("LfSegmentGuid")
                        .HasConstraintName("FK_Note_Segment_SegmentTempId3");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhBdryMarker", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPhPhonemeSet", null)
                        .WithMany("BoundaryMarkersOC")
                        .HasForeignKey("LfPhPhonemeSetGuid")
                        .HasConstraintName("FK_PhBdryMarker_PhPhonemeSet_PhPhonemeSetTempId");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhCode", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPhBdryMarker", null)
                        .WithMany("CodesOS")
                        .HasForeignKey("LfPhBdryMarkerGuid")
                        .HasConstraintName("FK_PhCode_PhBdryMarker_PhBdryMarkerGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPhPhoneme", null)
                        .WithMany("CodesOS")
                        .HasForeignKey("LfPhPhonemeGuid")
                        .HasConstraintName("FK_PhCode_PhPhoneme_PhPhonemeTempId");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhEnvironment", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPhPhonContext", "LeftContextRA")
                        .WithMany()
                        .HasForeignKey("LeftContextRAGuid")
                        .HasConstraintName("FK_PhEnvironment_PhPhonContext_LeftContextRATempId");

                    b.HasOne("LfSync.Data.LCModel.LfMoAffixAllomorph", null)
                        .WithMany("PhoneEnvRC")
                        .HasForeignKey("LfMoAffixAllomorphGuid")
                        .HasConstraintName("FK_PhEnvironment_MoForm_MoAffixAllomorphGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoAffixAllomorph", null)
                        .WithMany("PositionRS")
                        .HasForeignKey("LfMoAffixAllomorphGuid1")
                        .HasConstraintName("FK_PhEnvironment_MoForm_MoAffixAllomorphGuid1");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemAllomorph", null)
                        .WithMany("PhoneEnvRC")
                        .HasForeignKey("LfMoStemAllomorphGuid")
                        .HasConstraintName("FK_PhEnvironment_MoForm_MoStemAllomorphGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPhPhonContext", "RightContextRA")
                        .WithMany()
                        .HasForeignKey("RightContextRAGuid")
                        .HasConstraintName("FK_PhEnvironment_PhPhonContext_RightContextRATempId1");

                    b.Navigation("LeftContextRA");

                    b.Navigation("RightContextRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhonContext", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfStText", "DescriptionOA")
                        .WithMany()
                        .HasForeignKey("DescriptionOAGuid")
                        .HasConstraintName("FK_PhPhonContext_StText_DescriptionOATempId1");

                    b.Navigation("DescriptionOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhoneme", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "FeaturesOA")
                        .WithMany()
                        .HasForeignKey("FeaturesOAGuid")
                        .HasConstraintName("FK_PhPhoneme_FsFeatStruc_FeaturesOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPhPhonemeSet", null)
                        .WithMany("PhonemesOC")
                        .HasForeignKey("LfPhPhonemeSetGuid")
                        .HasConstraintName("FK_PhPhoneme_PhPhonemeSet_PhPhonemeSetTempId1");

                    b.Navigation("FeaturesOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPicture", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("PicturesOS")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_Picture_Senses_LexSenseGuid");

                    b.HasOne("LfSync.Data.LCModel.LfFile", "PictureFileRA")
                        .WithMany()
                        .HasForeignKey("PictureFileRAGuid")
                        .HasConstraintName("FK_Picture_File_PictureFileRAGuid");

                    b.Navigation("PictureFileRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPossibility", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "ConfidenceRA")
                        .WithMany()
                        .HasForeignKey("ConfidenceRAGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_ConfidenceRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("DialectLabelsRS")
                        .HasForeignKey("LfLexEntryGuid")
                        .HasConstraintName("FK_Possibilities_Entries_LexEntryGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("DoNotPublishInRC")
                        .HasForeignKey("LfLexEntryGuid1")
                        .HasConstraintName("FK_Possibilities_Entries_LexEntryGuid1");

                    b.HasOne("LfSync.Data.LCModel.LfLexEntry", null)
                        .WithMany("DoNotShowMainEntryInRC")
                        .HasForeignKey("LfLexEntryGuid2")
                        .HasConstraintName("FK_Possibilities_Entries_LexEntryGuid2");

                    b.HasOne("LfSync.Data.LCModel.LfLexEtymology", null)
                        .WithMany("LanguageRS")
                        .HasForeignKey("LfLexEtymologyGuid")
                        .HasConstraintName("FK_Possibilities_LexEtymology_LexEtymologyGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexPronunciation", null)
                        .WithMany("DoNotPublishInRC")
                        .HasForeignKey("LfLexPronunciationGuid")
                        .HasConstraintName("FK_Possibilities_LexPronunciation_LexPronunciationGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("ThesaurusItemsRC")
                        .HasForeignKey("LfLexSenseGuid1")
                        .HasConstraintName("FK_Possibilities_Senses_LexSenseGuid1");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("UsageTypesRC")
                        .HasForeignKey("LfLexSenseGuid2")
                        .HasConstraintName("FK_Possibilities_Senses_LexSenseGuid2");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("DialectLabelsRS")
                        .HasForeignKey("LfLexSenseGuid3")
                        .HasConstraintName("FK_Possibilities_Senses_LexSenseGuid3");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("DoNotPublishInRC")
                        .HasForeignKey("LfLexSenseGuid4")
                        .HasConstraintName("FK_Possibilities_Senses_LexSenseGuid4");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("DomainTypesRC")
                        .HasForeignKey("LfLexSenseGuid5")
                        .HasConstraintName("FK_Possibilities_Senses_LexSenseGuid5");

                    b.HasOne("LfSync.Data.LCModel.LfMoCompoundRule", null)
                        .WithMany("ToProdRestrictRC")
                        .HasForeignKey("LfMoCompoundRuleGuid")
                        .HasConstraintName("FK_Possibilities_MoCompoundRule_MoCompoundRuleGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoDerivAffMsa", null)
                        .WithMany("FromProdRestrictRC")
                        .HasForeignKey("LfMoDerivAffMsaGuid")
                        .HasConstraintName("FK_Possibilities_MoMorphSynAnalysis_MoDerivAffMsaGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoDerivAffMsa", null)
                        .WithMany("ToProdRestrictRC")
                        .HasForeignKey("LfMoDerivAffMsaGuid1")
                        .HasConstraintName("FK_Possibilities_MoMorphSynAnalysis_MoDerivAffMsaGuid1");

                    b.HasOne("LfSync.Data.LCModel.LfMoDerivStepMsa", null)
                        .WithMany("ProdRestrictRC")
                        .HasForeignKey("LfMoDerivStepMsaGuid")
                        .HasConstraintName("FK_Possibilities_MoMorphSynAnalysis_MoDerivStepMsaGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflAffMsa", null)
                        .WithMany("FromProdRestrictRC")
                        .HasForeignKey("LfMoInflAffMsaGuid")
                        .HasConstraintName("FK_Possibilities_MoMorphSynAnalysis_MoInflAffMsaGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemMsa", null)
                        .WithMany("ProdRestrictRC")
                        .HasForeignKey("LfMoStemMsaGuid1")
                        .HasConstraintName("FK_Possibilities_MoMorphSynAnalysis_MoStemMsaGuid1");

                    b.HasOne("LfSync.Data.LCModel.LfPicture", null)
                        .WithMany("DoNotPublishInRC")
                        .HasForeignKey("LfPictureGuid")
                        .HasConstraintName("FK_Possibilities_Picture_PictureGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", null)
                        .WithMany("SubPossibilitiesOS")
                        .HasForeignKey("ParentPossibilityGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_PossibilityGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPossibilityList", null)
                        .WithMany("PossibilitiesOS")
                        .HasForeignKey("PossibilityListGuid")
                        .HasConstraintName("FK_Possibilities_PossibilityLists_PossibilityListTempId");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "StatusRA")
                        .WithMany()
                        .HasForeignKey("StatusRAGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_StatusRAGuid");

                    b.Navigation("ConfidenceRA");

                    b.Navigation("StatusRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPubDivision", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPubHFSet", "HFSetOA")
                        .WithMany()
                        .HasForeignKey("HFSetOAGuid")
                        .HasConstraintName("FK_PubDivision_PubHFSet_HFSetOATempId");

                    b.HasOne("LfSync.Data.LCModel.LfPublication", null)
                        .WithMany("DivisionsOS")
                        .HasForeignKey("LfPublicationGuid")
                        .HasConstraintName("FK_PubDivision_Publication_PublicationTempId");

                    b.HasOne("LfSync.Data.LCModel.LfPubPageLayout", "PageLayoutOA")
                        .WithMany()
                        .HasForeignKey("PageLayoutOAGuid")
                        .HasConstraintName("FK_PubDivision_PubPageLayout_PageLayoutOATempId");

                    b.Navigation("HFSetOA");

                    b.Navigation("PageLayoutOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPubHFSet", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPubHeader", "DefaultFooterOA")
                        .WithMany()
                        .HasForeignKey("DefaultFooterOAGuid")
                        .HasConstraintName("FK_PubHFSet_PubHeader_DefaultFooterOATempId");

                    b.HasOne("LfSync.Data.LCModel.LfPubHeader", "DefaultHeaderOA")
                        .WithMany()
                        .HasForeignKey("DefaultHeaderOAGuid")
                        .HasConstraintName("FK_PubHFSet_PubHeader_DefaultHeaderOATempId1");

                    b.HasOne("LfSync.Data.LCModel.LfPubHeader", "EvenFooterOA")
                        .WithMany()
                        .HasForeignKey("EvenFooterOAGuid")
                        .HasConstraintName("FK_PubHFSet_PubHeader_EvenFooterOATempId2");

                    b.HasOne("LfSync.Data.LCModel.LfPubHeader", "EvenHeaderOA")
                        .WithMany()
                        .HasForeignKey("EvenHeaderOAGuid")
                        .HasConstraintName("FK_PubHFSet_PubHeader_EvenHeaderOATempId3");

                    b.HasOne("LfSync.Data.LCModel.LfPubHeader", "FirstFooterOA")
                        .WithMany()
                        .HasForeignKey("FirstFooterOAGuid")
                        .HasConstraintName("FK_PubHFSet_PubHeader_FirstFooterOATempId4");

                    b.HasOne("LfSync.Data.LCModel.LfPubHeader", "FirstHeaderOA")
                        .WithMany()
                        .HasForeignKey("FirstHeaderOAGuid")
                        .HasConstraintName("FK_PubHFSet_PubHeader_FirstHeaderOATempId5");

                    b.HasOne("LfSync.Data.LCModel.LfPossibilityList", null)
                        .WithMany("HeaderFooterSetsOC")
                        .HasForeignKey("LfPossibilityListGuid")
                        .HasConstraintName("FK_PubHFSet_PossibilityLists_PossibilityListGuid");

                    b.Navigation("DefaultFooterOA");

                    b.Navigation("DefaultHeaderOA");

                    b.Navigation("EvenFooterOA");

                    b.Navigation("EvenHeaderOA");

                    b.Navigation("FirstFooterOA");

                    b.Navigation("FirstHeaderOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPublication", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibilityList", null)
                        .WithMany("PublicationsOC")
                        .HasForeignKey("LfPossibilityListGuid")
                        .HasConstraintName("FK_Publication_PossibilityLists_PossibilityListGuid");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfSegment", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMediaURI", "MediaURIRA")
                        .WithMany()
                        .HasForeignKey("MediaURIRAGuid")
                        .HasConstraintName("FK_Segment_MediaURI_MediaURIRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPerson", "SpeakerRA")
                        .WithMany()
                        .HasForeignKey("SpeakerRAGuid")
                        .HasConstraintName("FK_Segment_Possibilities_SpeakerRAGuid");

                    b.Navigation("MediaURIRA");

                    b.Navigation("SpeakerRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfStPara", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfStText", null)
                        .WithMany("ParagraphsOS")
                        .HasForeignKey("LfStTextGuid")
                        .HasConstraintName("FK_StPara_StText_StTextTempId2");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfTextTag", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfSegment", "BeginSegmentRA")
                        .WithMany()
                        .HasForeignKey("BeginSegmentRAGuid")
                        .HasConstraintName("FK_TextTag_Segment_BeginSegmentRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfSegment", "EndSegmentRA")
                        .WithMany()
                        .HasForeignKey("EndSegmentRAGuid")
                        .HasConstraintName("FK_TextTag_Segment_EndSegmentRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfStText", null)
                        .WithMany("TagsOC")
                        .HasForeignKey("LfStTextGuid")
                        .HasConstraintName("FK_TextTag_StText_StTextGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "TagRA")
                        .WithMany()
                        .HasForeignKey("TagRAGuid")
                        .HasConstraintName("FK_TextTag_Possibilities_TagRAGuid");

                    b.Navigation("BeginSegmentRA");

                    b.Navigation("EndSegmentRA");

                    b.Navigation("TagRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfTranslation", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexExampleSentence", null)
                        .WithMany("TranslationsOC")
                        .HasForeignKey("LfLexExampleSentenceGuid")
                        .HasConstraintName("FK_Translation_ExampleSentences_LexExampleSentenceGuid");

                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "TypeRA")
                        .WithMany()
                        .HasForeignKey("TypeRAGuid")
                        .HasConstraintName("FK_Translation_Possibilities_TypeRAGuid");

                    b.Navigation("TypeRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiAnalysis", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "CategoryRA")
                        .WithMany()
                        .HasForeignKey("CategoryRAGuid")
                        .HasConstraintName("FK_WfiAnalysis_Possibilities_CategoryRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoDeriv", "DerivationOA")
                        .WithMany()
                        .HasForeignKey("DerivationOAGuid")
                        .HasConstraintName("FK_WfiAnalysis_MoDeriv_DerivationOAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfWfiWordform", null)
                        .WithMany("AnalysesOC")
                        .HasForeignKey("LfWfiWordformGuid")
                        .HasConstraintName("FK_WfiAnalysis_WfiWordform_WfiWordformTempId");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "MsFeaturesOA")
                        .WithMany()
                        .HasForeignKey("MsFeaturesOAGuid")
                        .HasConstraintName("FK_WfiAnalysis_FsFeatStruc_MsFeaturesOAGuid");

                    b.Navigation("CategoryRA");

                    b.Navigation("DerivationOA");

                    b.Navigation("MsFeaturesOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiGloss", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", null)
                        .WithMany("MeaningsOC")
                        .HasForeignKey("LfWfiAnalysisGuid")
                        .HasConstraintName("FK_WfiGloss_WfiAnalysis_WfiAnalysisGuid");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiMorphBundle", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntryInflType", "InflTypeRA")
                        .WithMany()
                        .HasForeignKey("InflTypeRAGuid")
                        .HasConstraintName("FK_WfiMorphBundle_Possibilities_InflTypeRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfWfiAnalysis", null)
                        .WithMany("MorphBundlesOS")
                        .HasForeignKey("LfWfiAnalysisGuid")
                        .HasConstraintName("FK_WfiMorphBundle_WfiAnalysis_WfiAnalysisGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoForm", "MorphRA")
                        .WithMany()
                        .HasForeignKey("MorphRAGuid")
                        .HasConstraintName("FK_WfiMorphBundle_MoForm_MorphRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfMoMorphSynAnalysis", "MsaRA")
                        .WithMany()
                        .HasForeignKey("MsaRAGuid")
                        .HasConstraintName("FK_WfiMorphBundle_MoMorphSynAnalysis_MsaRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLexSense", "SenseRA")
                        .WithMany()
                        .HasForeignKey("SenseRAGuid")
                        .HasConstraintName("FK_WfiMorphBundle_Senses_SenseRAGuid");

                    b.Navigation("InflTypeRA");

                    b.Navigation("MorphRA");

                    b.Navigation("MsaRA");

                    b.Navigation("SenseRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemAllomorph", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoStemName", "StemNameRA")
                        .WithMany()
                        .HasForeignKey("StemNameRAGuid")
                        .HasConstraintName("FK_MoForm_MoStemName_StemNameRATempId3");

                    b.Navigation("StemNameRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivAffMsa", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "AffixCategoryRA")
                        .WithMany()
                        .HasForeignKey("AffixCategoryRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_AffixCategoryRATempId");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", "FromInflectionClassRA")
                        .WithMany()
                        .HasForeignKey("FromInflectionClassRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoInflClass_FromInflectionClassRATempI~");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "FromMsFeaturesOA")
                        .WithMany()
                        .HasForeignKey("FromMsFeaturesOAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_FsFeatStruc_FromMsFeaturesOATempId4");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "FromPartOfSpeechRA")
                        .WithMany()
                        .HasForeignKey("FromPartOfSpeechRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_FromPartOfSpeechRATempId4");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemName", "FromStemNameRA")
                        .WithMany()
                        .HasForeignKey("FromStemNameRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoStemName_FromStemNameRATempId1");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratum", "StratumRA")
                        .WithMany()
                        .HasForeignKey("StratumRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoStratum_StratumRATempId1");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", "ToInflectionClassRA")
                        .WithMany()
                        .HasForeignKey("ToInflectionClassRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoInflClass_ToInflectionClassRATempId8");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "ToMsFeaturesOA")
                        .WithMany()
                        .HasForeignKey("ToMsFeaturesOAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_FsFeatStruc_ToMsFeaturesOATempId18");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "ToPartOfSpeechRA")
                        .WithMany()
                        .HasForeignKey("ToPartOfSpeechRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_ToPartOfSpeechRATempId30");

                    b.Navigation("AffixCategoryRA");

                    b.Navigation("FromInflectionClassRA");

                    b.Navigation("FromMsFeaturesOA");

                    b.Navigation("FromPartOfSpeechRA");

                    b.Navigation("FromStemNameRA");

                    b.Navigation("StratumRA");

                    b.Navigation("ToInflectionClassRA");

                    b.Navigation("ToMsFeaturesOA");

                    b.Navigation("ToPartOfSpeechRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivStepMsa", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "InflFeatsOA")
                        .WithMany()
                        .HasForeignKey("InflFeatsOAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_FsFeatStruc_InflFeatsOATempId6");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", "InflectionClassRA")
                        .WithMany()
                        .HasForeignKey("InflectionClassRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoInflClass_InflectionClassRATempId2");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "MsFeaturesOA")
                        .WithMany()
                        .HasForeignKey("MsFeaturesOAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_FsFeatStruc_MsFeaturesOATempId13");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "PartOfSpeechRA")
                        .WithMany()
                        .HasForeignKey("PartOfSpeechRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_PartOfSpeechRATempId23");

                    b.Navigation("InflFeatsOA");

                    b.Navigation("InflectionClassRA");

                    b.Navigation("MsFeaturesOA");

                    b.Navigation("PartOfSpeechRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffMsa", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "AffixCategoryRA")
                        .WithMany()
                        .HasForeignKey("AffixCategoryRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_AffixCategoryRATempId1");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "InflFeatsOA")
                        .WithMany()
                        .HasForeignKey("InflFeatsOAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_FsFeatStruc_InflFeatsOATempId7");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "PartOfSpeechRA")
                        .WithMany()
                        .HasForeignKey("PartOfSpeechRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_PartOfSpeechRATempId24");

                    b.Navigation("AffixCategoryRA");

                    b.Navigation("InflFeatsOA");

                    b.Navigation("PartOfSpeechRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemMsa", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", "InflectionClassRA")
                        .WithMany()
                        .HasForeignKey("InflectionClassRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoInflClass_InflectionClassRATempId3");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "MsFeaturesOA")
                        .WithMany()
                        .HasForeignKey("MsFeaturesOAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_FsFeatStruc_MsFeaturesOATempId14");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "PartOfSpeechRA")
                        .WithMany()
                        .HasForeignKey("PartOfSpeechRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_Possibilities_PartOfSpeechRATempId25");

                    b.HasOne("LfSync.Data.LCModel.LfMoStratum", "StratumRA")
                        .WithMany()
                        .HasForeignKey("StratumRAGuid")
                        .HasConstraintName("FK_MoMorphSynAnalysis_MoStratum_StratumRATempId3");

                    b.Navigation("InflectionClassRA");

                    b.Navigation("MsFeaturesOA");

                    b.Navigation("PartOfSpeechRA");

                    b.Navigation("StratumRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfAnthroItem", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("AnthroCodesRC")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_Possibility_Senses_LexSenseTempId");

                    b.HasOne("LfSync.Data.LCModel.LfSemanticDomain", null)
                        .WithMany("OcmRefsRC")
                        .HasForeignKey("LfSemanticDomainGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_SemanticDomainTempId17");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryType", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexEntryRef", null)
                        .WithMany("ComplexEntryTypesRS")
                        .HasForeignKey("LfLexEntryRefGuid")
                        .HasConstraintName("FK_Possibility_LexEntryRef_LexEntryRefTempId");

                    b.HasOne("LfSync.Data.LCModel.LfLexEntryRef", null)
                        .WithMany("VariantEntryTypesRS")
                        .HasForeignKey("LfLexEntryRefGuid1")
                        .HasConstraintName("FK_Possibility_LexEntryRef_LexEntryRefTempId1");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPartOfSpeech", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "DefaultFeaturesOA")
                        .WithMany()
                        .HasForeignKey("DefaultFeaturesOAGuid")
                        .HasConstraintName("FK_Possibility_FsFeatStruc_DefaultFeaturesOATempId1");

                    b.HasOne("LfSync.Data.LCModel.LfMoInflClass", "DefaultInflectionClassRA")
                        .WithMany()
                        .HasForeignKey("DefaultInflectionClassRAGuid")
                        .HasConstraintName("FK_Possibility_MoInflClass_DefaultInflectionClassRATempId");

                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "InherFeatValOA")
                        .WithMany()
                        .HasForeignKey("InherFeatValOAGuid")
                        .HasConstraintName("FK_Possibility_FsFeatStruc_InherFeatValOATempId9");

                    b.HasOne("LfSync.Data.LCModel.LfMoStemMsa", null)
                        .WithMany("FromPartsOfSpeechRC")
                        .HasForeignKey("LfMoStemMsaGuid")
                        .HasConstraintName("FK_Possibility_MoMorphSynAnalysis_MoStemMsaTempId11");

                    b.Navigation("DefaultFeaturesOA");

                    b.Navigation("DefaultInflectionClassRA");

                    b.Navigation("InherFeatValOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPerson", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfPossibility", "EducationRA")
                        .WithMany()
                        .HasForeignKey("EducationRAGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_EducationRAGuid");

                    b.HasOne("LfSync.Data.LCModel.LfLocation", "PlaceOfBirthRA")
                        .WithMany()
                        .HasForeignKey("PlaceOfBirthRAGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_PlaceOfBirthRAGuid");

                    b.Navigation("EducationRA");

                    b.Navigation("PlaceOfBirthRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfSemanticDomain", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfLexSense", null)
                        .WithMany("SemanticDomainsRC")
                        .HasForeignKey("LfLexSenseGuid")
                        .HasConstraintName("FK_Possibility_Senses_LexSenseTempId6");

                    b.HasOne("LfSync.Data.LCModel.LfSemanticDomain", null)
                        .WithMany("RelatedDomainsRC")
                        .HasForeignKey("LfSemanticDomainGuid")
                        .HasConstraintName("FK_Possibilities_Possibilities_SemanticDomainTempId19");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoAffixAllomorph", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "MsEnvFeaturesOA")
                        .WithMany()
                        .HasForeignKey("MsEnvFeaturesOAGuid")
                        .HasConstraintName("FK_MoForm_FsFeatStruc_MsEnvFeaturesOATempId12");

                    b.HasOne("LfSync.Data.LCModel.LfPartOfSpeech", "MsEnvPartOfSpeechRA")
                        .WithMany()
                        .HasForeignKey("MsEnvPartOfSpeechRAGuid")
                        .HasConstraintName("FK_MoForm_Possibilities_MsEnvPartOfSpeechRATempId22");

                    b.Navigation("MsEnvFeaturesOA");

                    b.Navigation("MsEnvPartOfSpeechRA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryInflType", b =>
                {
                    b.HasOne("LfSync.Data.LCModel.LfFsFeatStruc", "InflFeatsOA")
                        .WithMany()
                        .HasForeignKey("InflFeatsOAGuid")
                        .HasConstraintName("FK_Possibility_FsFeatStruc_InflFeatsOATempId5");

                    b.Navigation("InflFeatsOA");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatStruc", b =>
                {
                    b.Navigation("FeatureSpecsOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfFsFeatStrucType", b =>
                {
                    b.Navigation("FeaturesRS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntry", b =>
                {
                    b.Navigation("AlternateFormsOS");

                    b.Navigation("DialectLabelsRS");

                    b.Navigation("DoNotPublishInRC");

                    b.Navigation("DoNotShowMainEntryInRC");

                    b.Navigation("EntryRefsOS");

                    b.Navigation("EtymologyOS");

                    b.Navigation("MorphoSyntaxAnalysesOC");

                    b.Navigation("PronunciationsOS");

                    b.Navigation("SensesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryRef", b =>
                {
                    b.Navigation("ComplexEntryTypesRS");

                    b.Navigation("VariantEntryTypesRS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEtymology", b =>
                {
                    b.Navigation("LanguageRS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExampleSentence", b =>
                {
                    b.Navigation("TranslationsOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexExtendedNote", b =>
                {
                    b.Navigation("ExamplesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexPronunciation", b =>
                {
                    b.Navigation("DoNotPublishInRC");

                    b.Navigation("MediaFilesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexSense", b =>
                {
                    b.Navigation("AnthroCodesRC");

                    b.Navigation("AppendixesRC");

                    b.Navigation("DialectLabelsRS");

                    b.Navigation("DoNotPublishInRC");

                    b.Navigation("DomainTypesRC");

                    b.Navigation("ExamplesOS");

                    b.Navigation("ExtendedNoteOS");

                    b.Navigation("PicturesOS");

                    b.Navigation("SemanticDomainsRC");

                    b.Navigation("SensesOS");

                    b.Navigation("ThesaurusItemsRC");

                    b.Navigation("UsageTypesRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoCompoundRule", b =>
                {
                    b.Navigation("ToProdRestrictRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDeriv", b =>
                {
                    b.Navigation("StratumAppsOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoGlossItem", b =>
                {
                    b.Navigation("GlossItemsOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffixTemplate", b =>
                {
                    b.Navigation("EncliticSlotsRS");

                    b.Navigation("PrefixSlotsRS");

                    b.Navigation("ProcliticSlotsRS");

                    b.Navigation("SlotsRS");

                    b.Navigation("SuffixSlotsRS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflClass", b =>
                {
                    b.Navigation("ReferenceFormsOC");

                    b.Navigation("RulesOfReferralOS");

                    b.Navigation("StemNamesOC");

                    b.Navigation("SubclassesOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflTemplateApp", b =>
                {
                    b.Navigation("SlotAppsOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoMorphSynAnalysis", b =>
                {
                    b.Navigation("ComponentsRS");

                    b.Navigation("GlossBundleRS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemName", b =>
                {
                    b.Navigation("RegionsOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStratumApp", b =>
                {
                    b.Navigation("CompoundRuleAppsOS");

                    b.Navigation("DerivAffAppOS");

                    b.Navigation("PRuleAppsOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhBdryMarker", b =>
                {
                    b.Navigation("CodesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhoneme", b =>
                {
                    b.Navigation("CodesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPhPhonemeSet", b =>
                {
                    b.Navigation("BoundaryMarkersOC");

                    b.Navigation("PhonemesOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPicture", b =>
                {
                    b.Navigation("DoNotPublishInRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPossibility", b =>
                {
                    b.Navigation("SubPossibilitiesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPossibilityList", b =>
                {
                    b.Navigation("HeaderFooterSetsOC");

                    b.Navigation("PossibilitiesOS");

                    b.Navigation("PublicationsOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPublication", b =>
                {
                    b.Navigation("DivisionsOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfSegment", b =>
                {
                    b.Navigation("AnalysesRS");

                    b.Navigation("NotesOS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfStText", b =>
                {
                    b.Navigation("ParagraphsOS");

                    b.Navigation("TagsOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiAnalysis", b =>
                {
                    b.Navigation("CompoundRuleAppsRS");

                    b.Navigation("EvaluationsRC");

                    b.Navigation("InflTemplateAppsRS");

                    b.Navigation("MeaningsOC");

                    b.Navigation("MorphBundlesOS");

                    b.Navigation("StemsRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfWfiWordform", b =>
                {
                    b.Navigation("AnalysesOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoAffixForm", b =>
                {
                    b.Navigation("InflectionClassesRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemAllomorph", b =>
                {
                    b.Navigation("PhoneEnvRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivAffMsa", b =>
                {
                    b.Navigation("FromProdRestrictRC");

                    b.Navigation("ToProdRestrictRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoDerivStepMsa", b =>
                {
                    b.Navigation("ProdRestrictRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoInflAffMsa", b =>
                {
                    b.Navigation("FromProdRestrictRC");

                    b.Navigation("SlotsRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoStemMsa", b =>
                {
                    b.Navigation("FromPartsOfSpeechRC");

                    b.Navigation("ProdRestrictRC");

                    b.Navigation("SlotsRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexRefType", b =>
                {
                    b.Navigation("MembersOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfPartOfSpeech", b =>
                {
                    b.Navigation("AffixSlotsOC");

                    b.Navigation("AffixTemplatesOS");

                    b.Navigation("BearableFeaturesRC");

                    b.Navigation("EmptyParadigmCellsOC");

                    b.Navigation("InflectableFeatsRC");

                    b.Navigation("InflectionClassesOC");

                    b.Navigation("ReferenceFormsOC");

                    b.Navigation("RulesOfReferralOS");

                    b.Navigation("StemNamesOC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfSemanticDomain", b =>
                {
                    b.Navigation("OcmRefsRC");

                    b.Navigation("QuestionsOS");

                    b.Navigation("RelatedDomainsRC");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfMoAffixAllomorph", b =>
                {
                    b.Navigation("PhoneEnvRC");

                    b.Navigation("PositionRS");
                });

            modelBuilder.Entity("LfSync.Data.LCModel.LfLexEntryInflType", b =>
                {
                    b.Navigation("SlotsRC");
                });
#pragma warning restore 612, 618
        }
    }
}
